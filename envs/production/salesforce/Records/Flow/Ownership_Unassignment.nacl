salesforce.Flow Ownership_Unassignment {
  fullName = "Ownership_Unassignment"
  actionCalls = [
    {
      name = "Owner_has_been_unassigned"
      label = "Owner has been unassigned"
      locationX = 1325
      locationY = 313
      actionName = salesforce.WorkflowAlert.instance.Account_Send_Owner_has_been_unassigned_to_manager
      actionType = "emailAlert"
      inputParameters = [
        {
          name = "SObjectRowId"
          value = {
            elementReference = "Get_Current_Company.Long_Account_ID__c"
          }
        },
      ]
    },
  ]
  assignments = [
    {
      name = "Companies_Count"
      label = "Companies Count"
      locationX = 786
      locationY = 48
      assignmentItems = [
        {
          assignToReference = "CompaniesCount"
          operator = "AssignCount"
          value = {
            elementReference = "Get_current_users_accounts"
          }
        },
        {
          assignToReference = "CurrentCompany"
          operator = "Assign"
        },
      ]
      connector = {
        targetReference = "Unassign_Yourself"
      }
    },
    {
      name = "UserFormulaAssignment"
      label = "UserFormulaAssignment"
      locationX = 166
      locationY = 52
      assignmentItems = [
        {
          assignToReference = "CurrentUserId"
          operator = "Assign"
          value = {
            elementReference = "UserFormula"
          }
        },
      ]
      connector = {
        targetReference = "Get_Current_Company"
      }
    },
  ]
  decisions = [
    {
      name = "Active_owner_is_company_owner"
      label = "Active owner is company owner"
      locationX = 388
      locationY = 54
      defaultConnector = {
        targetReference = "You_re_not_the_owner_of_this_account"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_Current_User"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_Current_Company.Owner.Id"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserFormula"
              }
            },
          ]
          connector = {
            targetReference = "GetCurrentUserData"
          }
          label = "Owner is Current User"
        },
      ]
    },
    {
      name = "Unassign"
      label = "Unassign?"
      locationX = 1024
      locationY = 51
      defaultConnector = {
        targetReference = "NoChange"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Yes"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "OwnershipDecision"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Update_Owner"
          }
          label = "Yes"
        },
        {
          name = "No"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "OwnershipDecision"
              operator = "EqualTo"
              rightValue = {
                stringValue = "No"
              }
            },
          ]
          connector = {
            targetReference = "NoChange"
          }
          label = "No"
        },
      ]
    },
  ]
  description = "Flow for company owners to un-assign themselves from a company."
  formulas = [
    {
      name = "UserFormula"
      dataType = "String"
      expression = "{!$User.Long_User_ID__c}"
    },
  ]
  interviewLabel = "Ownership Unassignment {!$Flow.CurrentDateTime} by UserId: {!UserFormula} on RecordId: {!recordId}"
  label = "Ownership Unassignment"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "Flow"
  recordLookups = [
    {
      name = "Get_Current_Company"
      label = "Get Current Company"
      locationX = 291
      locationY = 52
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Active_owner_is_company_owner"
      }
      faultConnector = {
        targetReference = "Something_Went_Wrong"
      }
      filters = [
        {
          field = "Long_Account_ID__c"
          operator = "EqualTo"
          value = {
            elementReference = "recordId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Account
      storeOutputAutomatically = true
    },
    {
      name = "Get_current_users_accounts"
      label = "Get current users accounts"
      locationX = 678
      locationY = 48
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Companies_Count"
      }
      faultConnector = {
        targetReference = "Something_Went_Wrong"
      }
      filters = [
        {
          field = "OwnerId"
          operator = "EqualTo"
          value = {
            elementReference = "CurrentUserId"
          }
        },
        {
          field = "RecordTypeId"
          operator = "EqualTo"
          value = {
            stringValue = "0121t000000IQTiAAO"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Account
      queriedFields = [
        salesforce.Account.field.Id,
        salesforce.Account.field.AM__c,
        salesforce.Account.field.AE__c,
        salesforce.Account.field.Region__c,
        salesforce.Account.field.Zone__c,
        "BillingCountry",
        salesforce.Account.field.Account_Potential__c,
        salesforce.Account.field.Strategic__c,
        salesforce.Account.field.Strategic_receiver__c,
      ]
      storeOutputAutomatically = true
    },
    {
      name = "GetCurrentUserData"
      label = "GetCurrentUserData"
      locationX = 568
      locationY = 48
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Get_current_users_accounts"
      }
      faultConnector = {
        targetReference = "Something_Went_Wrong"
      }
      filters = [
        {
          field = "Long_User_ID__c"
          operator = "EqualTo"
          value = {
            elementReference = "UserFormula"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      storeOutputAutomatically = true
    },
  ]
  recordUpdates = [
    {
      name = "Update_Owner"
      label = "Update Owner"
      locationX = 1194
      locationY = 57
      connector = {
        targetReference = "Ownership_Transferred"
      }
      faultConnector = {
        targetReference = "Something_Went_Wrong"
      }
      filters = [
        {
          field = "Long_Account_ID__c"
          operator = "EqualTo"
          value = {
            elementReference = "recordId"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Last_Ownership_Update__c"
          value = {
            elementReference = "$Flow.CurrentDate"
          }
        },
        {
          field = "OwnerId"
          value = {
            stringValue = "0053X00000Bo8ZZQAZ"
          }
        },
        {
          field = "Owner_s_Email__c"
          value = {
            stringValue = ""
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            stringValue = ""
          }
        },
        {
          field = "PreviousOwner__c"
          value = {
            elementReference = "Get_Current_Company.OwnerId"
          }
        },
        {
          field = "Unassignment_Timestamp__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
      ]
      object = salesforce.Account
    },
  ]
  screens = [
    {
      name = "NoChange"
      label = "No Ownership Change"
      locationX = 1031
      locationY = 317
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "NoOwnershipChange"
          fieldText = "<p>No changes have been made.</p><p>Have a great day!</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Ownership_Transferred"
      label = "Ownership Transferred"
      locationX = 1324
      locationY = 49
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Owner_has_been_unassigned"
      }
      fields = [
        {
          name = "Success"
          fieldText = "<p>Success!</p><p><br></p><p>{!GetCurrentUserData.Name} has been unassigned from {!Get_Current_Company.Name}.</p><p>Total ARR: {!Get_Current_Company.Company_ARR__c}</p><p>Total Seats: {!Get_Current_Company.Company_Seats__c}</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Something_Went_Wrong"
      label = "Something Went Wrong"
      locationX = 437
      locationY = 376
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "ErrorScreen"
          fieldText = "<p>Something went wrong.</p><p>Please give your administrator the following details:</p><p><span style=\"color: rgb(255, 0, 0);\">{!$Flow.FaultMessage}</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      description = "Used by AM/AE to remove ownership of an account."
      name = "Unassign_Yourself"
      label = "Unassign Yourself"
      locationX = 899
      locationY = 49
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Unassign"
      }
      fields = [
        {
          name = "First_Screen"
          fieldText = "<p>Hey {!GetCurrentUserData.FirstName},</p><p><br></p><p>Your currently own {!CompaniesCount} companies.</p><p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">{!Get_Current_Company.Name} has X paying monday accounts and {!Get_Current_Company.of_open_opps__c} open opportunities with a value of {!Get_Current_Company.Company_ARR__c}.﻿</span></p><p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\"> </span></p><p>Are you sure you want to un-assign yourself as the owner of {!Get_Current_Company.Name}?</p>"
          fieldType = "DisplayText"
        },
        {
          name = "UnassignToggle"
          extensionName = "flowruntime:toggle"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "messageToggleInactive"
              value = {
                stringValue = "No"
              }
            },
            {
              name = "label"
              value = {
                stringValue = "Unassign yourself"
              }
            },
            {
              name = "messageToggleActive"
              value = {
                stringValue = "Yes"
              }
            },
            {
              name = "disabled"
              value = {
                booleanValue = false
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "OwnershipDecision"
              name = "value"
            },
          ]
        },
      ]
      helpText = "<p>This process will make you the owner of this company</p>"
      showFooter = true
      showHeader = true
    },
    {
      name = "You_re_not_the_owner_of_this_account"
      label = "You're not the owner of this account"
      locationX = 237
      locationY = 378
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "YouDontOwn"
          fieldText = "<p>You can only un-assign yourself from companies that you own.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
  ]
  start = {
    locationX = 51
    locationY = 52
    connector = {
      targetReference = "UserFormulaAssignment"
    }
  }
  status = "Active"
  variables = [
    {
      name = "CompaniesARR"
      dataType = "Currency"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 2
      value = {
        numberValue = 0
      }
    },
    {
      name = "CompaniesCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "CurrCompanyId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "CurrentCompany"
      dataType = "SObject"
      isCollection = false
      isInput = true
      isOutput = true
      objectType = salesforce.Account
    },
    {
      name = "CurrentUserId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "OwnershipDecision"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
      value = {
        stringValue = ""
      }
    },
    {
      name = "recordId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
  ]
}
