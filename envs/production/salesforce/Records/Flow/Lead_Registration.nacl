salesforce.Flow Lead_Registration {
  fullName = "Lead_Registration"
  assignments = [
    {
      name = "Status_Approved"
      label = "Status Approved"
      locationX = 663
      locationY = 277
      assignmentItems = [
        {
          assignToReference = "Status"
          operator = "Assign"
          value = {
            stringValue = "Approved"
          }
        },
      ]
      connector = {
        targetReference = "Create_Registration"
      }
    },
    {
      name = "Status_Denied"
      label = "Status Denied"
      locationX = 816
      locationY = 511
      assignmentItems = [
        {
          assignToReference = "Status"
          operator = "Assign"
          value = {
            stringValue = "Denied"
          }
        },
      ]
      connector = {
        targetReference = "Create_Registration"
      }
    },
    {
      name = "Status_Pending_Review"
      label = "Status Pending Review"
      locationX = 935
      locationY = 699
      assignmentItems = [
        {
          assignToReference = "Status"
          operator = "Assign"
          value = {
            stringValue = "Pending Review"
          }
        },
      ]
      connector = {
        targetReference = "Create_Registration"
      }
    },
  ]
  decisions = [
    {
      name = "Does_email_exist_in_BB"
      label = "Does email exist in BB"
      locationX = 787
      locationY = 63
      defaultConnector = {
        targetReference = "Status_Approved"
      }
      defaultConnectorLabel = "No BB"
      rules = [
        {
          name = "Yes_BB"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "ExistsInBB.value"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Find_Existing_Registrations"
          }
          label = "Yes BB"
        },
      ]
    },
    {
      name = "Lead_Found"
      label = "Lead Found"
      locationX = 1073
      locationY = 434
      defaultConnector = {
        targetReference = "Status_Pending_Review"
      }
      defaultConnectorLabel = "Leads Not Found"
      rules = [
        {
          name = "Yes_Leads_Found"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Find_Open_Leads"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "Status_Denied"
          }
          label = "Yes Leads Found"
        },
      ]
    },
    {
      name = "Navigate_To_Finish_Screen"
      label = "Navigate To Finish Screen"
      locationX = 410
      locationY = 497
      defaultConnector = {
        targetReference = "Registration_Denied"
      }
      defaultConnectorLabel = "Auto Denied"
      rules = [
        {
          name = "Pending_Review"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Status"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Pending Review"
              }
            },
          ]
          connector = {
            targetReference = "Registration_Accepted_Pending_CPM_Review"
          }
          label = "Pending Review"
        },
        {
          name = "Approved"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Status"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Approved"
              }
            },
          ]
          connector = {
            targetReference = "Auto_Approve"
          }
          label = "Approved"
        },
      ]
    },
    {
      name = "Registrations_Found"
      label = "Registrations Found"
      locationX = 804
      locationY = 251
      defaultConnector = {
        targetReference = "Find_Open_Leads"
      }
      defaultConnectorLabel = "Registrations Not Found"
      rules = [
        {
          name = "Found"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Find_Existing_Registrations"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "Status_Denied"
          }
          label = "Found"
        },
      ]
    },
  ]
  dynamicChoiceSets = [
    {
      name = "CompanySizeValues"
      dataType = "Picklist"
      picklistField = salesforce.Lead_Registration__c.field.Company_Size__c
      picklistObject = salesforce.Lead_Registration__c
      sortOrder = "Asc"
    },
    {
      name = "LocationValues"
      dataType = "Picklist"
      picklistField = salesforce.Lead_Registration__c.field.Location__c
      picklistObject = salesforce.Lead_Registration__c
    },
    {
      name = "RelationshipValues"
      dataType = "Picklist"
      picklistField = salesforce.Lead_Registration__c.field.Relationship__c
      picklistObject = salesforce.Lead_Registration__c
    },
  ]
  formulas = [
    {
      name = "ExpirationDate"
      dataType = "Date"
      expression = "{!$Flow.CurrentDate}+90"
    },
    {
      name = "UserIdFormula"
      dataType = "String"
      expression = "{!$User.Long_User_ID__c}"
    },
  ]
  interviewLabel = "Lead Registration {!$Flow.CurrentDateTime}"
  label = "Lead Registration"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "Flow"
  recordCreates = [
    {
      name = "Create_Registration"
      label = "Create Registration"
      locationX = 580
      locationY = 559
      connector = {
        targetReference = "Navigate_To_Finish_Screen"
      }
      inputAssignments = [
        {
          field = "CPM__c"
          value = {
            elementReference = "Get_User_Data.ManagerId"
          }
        },
        {
          field = "Comments__c"
          value = {
            elementReference = "Comments"
          }
        },
        {
          field = "Company_Size__c"
          value = {
            elementReference = "Company_Size"
          }
        },
        {
          field = "Company__c"
          value = {
            elementReference = "Company"
          }
        },
        {
          field = "Location__c"
          value = {
            elementReference = "Location"
          }
        },
        {
          field = "Name__c"
          value = {
            elementReference = "Name"
          }
        },
        {
          field = "OwnerId"
          value = {
            elementReference = "Get_User_Data.Id"
          }
        },
        {
          field = "Potential_Deal_Size__c"
          value = {
            elementReference = "Potential_Deal_Size2.value"
          }
        },
        {
          field = "Registered_Email__c"
          value = {
            elementReference = "Registered_Email.value"
          }
        },
        {
          field = "Registering_Partner__c"
          value = {
            elementReference = "Get_User_Data.Id"
          }
        },
        {
          field = "Registration_Expiration_Date__c"
          value = {
            elementReference = "ExpirationDate"
          }
        },
        {
          field = "Relationship__c"
          value = {
            elementReference = "Relationship"
          }
        },
        {
          field = "Status__c"
          value = {
            elementReference = "Status"
          }
        },
        {
          field = "Title__c"
          value = {
            elementReference = "Title"
          }
        },
      ]
      object = salesforce.Lead_Registration__c
    },
  ]
  recordLookups = [
    {
      name = "Find_Existing_Registrations"
      label = "Find Existing Registrations"
      locationX = 1051
      locationY = 135
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Registrations_Found"
      }
      filters = [
        {
          field = "Registered_Email__c"
          operator = "EqualTo"
          value = {
            elementReference = "Registered_Email.value"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Lead_Registration__c
      storeOutputAutomatically = true
    },
    {
      name = "Find_Open_Leads"
      label = "Find Open Leads"
      locationX = 1012
      locationY = 299
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Lead_Found"
      }
      filters = [
        {
          field = "Email"
          operator = "EqualTo"
          value = {
            elementReference = "Registered_Email.value"
          }
        },
        {
          field = "Status"
          operator = "EqualTo"
          value = {
            stringValue = "Contacted"
          }
        },
        {
          field = "Status"
          operator = "EqualTo"
          value = {
            stringValue = "Received"
          }
        },
        {
          field = "Status"
          operator = "EqualTo"
          value = {
            stringValue = "Attempting"
          }
        },
        {
          field = "Status"
          operator = "EqualTo"
          value = {
            stringValue = "Qualified"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Lead
      storeOutputAutomatically = true
    },
    {
      name = "Get_User_Data"
      label = "Get User Data"
      locationX = 447
      locationY = 58
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Lead_Registration"
      }
      filters = [
        {
          field = "Long_User_ID__c"
          operator = "EqualTo"
          value = {
            elementReference = "UserIdFormula"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      queriedFields = [
        salesforce.User.field.Id,
        salesforce.User.field.Name,
        salesforce.User.field.ManagerId,
      ]
      storeOutputAutomatically = true
    },
  ]
  screens = [
    {
      name = "Auto_Approve"
      label = "Auto Approve"
      locationX = 147
      locationY = 260
      allowBack = true
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "AutoApprove"
          fieldText = "<p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">Thank you for submitting an application for lead registration.</span></p><p><b style=\"font-size: 11pt; font-family: Arial; color: rgb(106, 168, 79); background-color: transparent;\">This lead is approved for registration!</b></p><p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">You will now get an email with the option to register your lead. Please make sure to take this step in order to ensure your registration.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Lead_Registration"
      label = "Lead Registration"
      locationX = 615
      locationY = 61
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "Does_email_exist_in_BB"
      }
      fields = [
        {
          name = "Registered_Email"
          extensionName = "flowruntime:email"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Registered Email"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Name"
          dataType = "String"
          fieldText = "Name"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Company"
          dataType = "String"
          fieldText = "Company"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Title"
          dataType = "String"
          fieldText = "Title"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Relationship"
          choiceReferences = [
            "RelationshipValues",
          ]
          dataType = "String"
          fieldText = "Relationship"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Company_Size"
          choiceReferences = [
            "CompanySizeValues",
          ]
          dataType = "String"
          fieldText = "Company Size"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Location"
          choiceReferences = [
            "LocationValues",
          ]
          dataType = "String"
          fieldText = "Location"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Potential_Deal_Size2"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Potential Deal Size"
              }
            },
            {
              name = "step"
              value = {
                numberValue = 25
              }
            },
            {
              name = "max"
              value = {
                numberValue = 1500
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Comments"
          fieldText = "Comments"
          fieldType = "LargeTextArea"
          isRequired = true
        },
        {
          name = "ExistsInBB"
          extensionName = "flowruntime:toggle"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Exists in BB - TEST ONLY"
              }
            },
            {
              name = "messageToggleActive"
              value = {
                stringValue = "Yes"
              }
            },
            {
              name = "messageToggleInactive"
              value = {
                stringValue = "No"
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Registration_Accepted_Pending_CPM_Review"
      label = "Registration Accepted - Pending CPM Review"
      locationX = 157
      locationY = 681
      allowBack = true
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "RegistrationSubmitted"
          fieldText = "<p><b style=\"font-size: 11pt; font-family: Arial; color: rgb(33, 87, 215); background-color: transparent;\">This request will need to be reviewed by your CPM.</b></p><p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">All details are now being sent to them in order to make a decision based on our current relationship with this lead.&nbsp;</span></p><p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">You will be notified with a final answer in the next 48 (?) hours.</span></p><p><br></p><p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">If you have any questions please feel free to contact you CPM</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Registration_Denied"
      label = "Registration Denied"
      locationX = 148
      locationY = 460
      allowBack = true
      allowFinish = true
      allowPause = true
      fields = [
        {
          name = "Auto_Dinied"
          fieldText = "<p><b style=\"font-size: 11pt; font-family: Arial; color: rgb(192, 23, 23); background-color: transparent;\">X Lead is not available for registration</b></p><p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">Unfortunately this lead is currently not available due to {reason}:</span></p><ul><li><span style=\"font-size: 11pt; background-color: transparent;\">You have reached the maximum number of registrations (25/25)</span></li><li><span style=\"font-size: 11pt; background-color: transparent;\">This lead is already registered under another partner (until XX/XX)</span></li><li><span style=\"font-size: 11pt; background-color: transparent;\">This lead is already registered under monday.com sales representative</span></li></ul><p><br></p><p><span style=\"font-size: 11pt; font-family: Arial; color: rgb(0, 0, 0); background-color: transparent;\">If you have any questions please feel free to contact you CPM.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
  ]
  start = {
    locationX = 50
    locationY = 40
    connector = {
      targetReference = "Get_User_Data"
    }
  }
  status = "Active"
  variables = [
    {
      name = "Status"
      dataType = "Picklist"
      isCollection = false
      isInput = false
      isOutput = false
    },
  ]
}
