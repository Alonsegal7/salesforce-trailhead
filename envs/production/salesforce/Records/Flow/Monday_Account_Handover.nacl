salesforce.Flow Monday_Account_Handover {
  fullName = "Monday_Account_Handover"
  assignments = [
    {
      name = "Add_1_error"
      label = "Add 1 error"
      locationX = 2431
      locationY = 501
      assignmentItems = [
        {
          assignToReference = "errorsCount"
          operator = "Add"
          value = {
            numberValue = 1
          }
        },
      ]
      connector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
    },
    {
      name = "Add_current_account_to_users_accounts_0"
      label = "Add current account to users accounts"
      locationX = 1380
      locationY = 577
      assignmentItems = [
        {
          assignToReference = "UsersAccounts"
          operator = "AddAtStart"
          value = {
            elementReference = "Loop_over_monday_accounts"
          }
        },
      ]
      connector = {
        targetReference = "Loop_over_monday_accounts"
      }
    },
    {
      name = "Company_id"
      label = "Company id"
      locationX = 744
      locationY = 620
      assignmentItems = [
        {
          assignToReference = "CompanyID_Var"
          operator = "Assign"
          value = {
            elementReference = "First_Current_Monday_Account.Id"
          }
        },
        {
          assignToReference = "StartedFromCompany"
          operator = "Assign"
          value = {
            booleanValue = true
          }
        },
        {
          assignToReference = "CompanyName_Var"
          operator = "Assign"
          value = {
            elementReference = "First_Current_Monday_Account.Name"
          }
        },
        {
          assignToReference = "CompanyOwnerId_Var"
          operator = "Assign"
          value = {
            elementReference = "First_Current_Monday_Account.Owner.Long_User_ID__c"
          }
        },
      ]
      connector = {
        targetReference = "Get_ALL_Monday_Accounts"
      }
    },
    {
      name = "Company_id_0"
      label = "Company id"
      locationX = 764
      locationY = 368
      assignmentItems = [
        {
          assignToReference = "CompanyID_Var"
          operator = "Assign"
          value = {
            elementReference = "First_Current_Monday_Account.ParentId"
          }
        },
        {
          assignToReference = "CompanyName_Var"
          operator = "Assign"
          value = {
            elementReference = "First_Current_Monday_Account.Parent.Name"
          }
        },
        {
          assignToReference = "CompanyOwnerId_Var"
          operator = "Assign"
          value = {
            elementReference = "First_Current_Monday_Account.Parent.Owner.Long_User_ID__c"
          }
        },
      ]
      connector = {
        targetReference = "Which_Accounts_to_hand_over"
      }
    },
    {
      name = "Count_accounts"
      label = "Count accounts"
      locationX = 1224
      locationY = 628
      assignmentItems = [
        {
          assignToReference = "MAsCount"
          operator = "AssignCount"
          value = {
            elementReference = "Get_ALL_Monday_Accounts"
          }
        },
      ]
      connector = {
        targetReference = "Loop_over_monday_accounts"
      }
    },
    {
      name = "Count_Selected_Accounts"
      label = "Count Selected Accounts"
      locationX = 1778
      locationY = 252
      assignmentItems = [
        {
          assignToReference = "selected_Accounts"
          operator = "AssignCount"
          value = {
            elementReference = "AccountsList.selectedRows_standard1"
          }
        },
        {
          assignToReference = "Selected_User_Accounts_To_Transfer"
          operator = "Assign"
          value = {
            elementReference = "AccountsList.selectedRows_standard1"
          }
        },
      ]
      connector = {
        targetReference = "Get_AM_Details_ALL"
      }
    },
    {
      name = "Set_AM_Id"
      label = "Set AM Id"
      locationX = 1986
      locationY = 135
      assignmentItems = [
        {
          assignToReference = "AMid"
          operator = "Assign"
          value = {
            elementReference = "Get_AM_Details_Single.Long_User_ID__c"
          }
        },
        {
          assignToReference = "AM_Manager_Id"
          operator = "Assign"
          value = {
            elementReference = "Get_AM_Details_Single.User_Manager_Long_Id__c"
          }
        },
      ]
      connector = {
        targetReference = "Is_AM_0"
      }
    },
    {
      name = "Set_AM_Id_ALL"
      label = "Set AM Id"
      locationX = 1986
      locationY = 253
      assignmentItems = [
        {
          assignToReference = "AMid"
          operator = "Assign"
          value = {
            elementReference = "Get_AM_Details_ALL.Long_User_ID__c"
          }
        },
        {
          assignToReference = "AM_Manager_Id"
          operator = "Assign"
          value = {
            elementReference = "Get_AM_Details_ALL.User_Manager_Long_Id__c"
          }
        },
      ]
      connector = {
        targetReference = "Is_AM_0_0_0"
      }
    },
    {
      name = "SetRecordID"
      label = "SetRecordID"
      locationX = 176
      locationY = 193
      assignmentItems = [
        {
          assignToReference = "$Flow.CurrentRecord"
          operator = "Assign"
          value = {
            elementReference = "recordId"
          }
        },
      ]
      connector = {
        targetReference = "First_Current_Monday_Account"
      }
    },
  ]
  decisions = [
    {
      name = "Above_40_Accounts"
      label = "Above 40 Accounts?"
      locationX = 1176
      locationY = 111
      defaultConnector = {
        targetReference = "Which_Accounts_to_hand_over_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "above_40_accounts_option"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "MAsCount"
              operator = "GreaterThanOrEqualTo"
              rightValue = {
                numberValue = 40
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover_Single"
          }
          label = "above 40 accounts"
        },
      ]
    },
    {
      name = "Company_or_monday_account"
      label = "Company or monday account?"
      locationX = 656
      locationY = 367
      defaultConnector = {
        targetReference = "Error_Screen"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Company"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "First_Current_Monday_Account.RecordTypeId"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0121t000000IQTiAAO"
              }
            },
          ]
          connector = {
            targetReference = "Company_id"
          }
          label = "Company"
        },
        {
          name = "Monday_Account"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "First_Current_Monday_Account.RecordTypeId"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0121t000000IQTnAAO"
              }
            },
          ]
          connector = {
            targetReference = "Company_id_0"
          }
          label = "Monday Account"
        },
      ]
    },
    {
      name = "Company_Transfer"
      label = "Company Transfer"
      locationX = 3050
      locationY = 369
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Started_from_MA_and_is_Company_Owner"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "CompanyOwnerId_Var"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
            {
              leftValueReference = "StartedFromCompany"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "Handover_Company"
          }
          label = "Started from MA and is Company Owner"
        },
        {
          name = "Company_Owner_and_started_from_Company"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "CompanyOwnerId_Var"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
            {
              leftValueReference = "StartedFromCompany"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Handover_Company_0"
          }
          label = "Company Owner and started from Company"
        },
      ]
    },
    {
      name = "CSM_or_Sales"
      label = "CSM or Sales?"
      locationX = 163
      locationY = 485
      defaultConnector = {
        targetReference = "Error_Screen"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Sales"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "UserProfile_var"
              operator = "Contains"
              rightValue = {
                stringValue = "00e1t000000NHjd"
              }
            },
            {
              leftValueReference = "UserProfile_var"
              operator = "Contains"
              rightValue = {
                stringValue = "00e1t000000ZIOT"
              }
            },
          ]
          connector = {
            targetReference = "Account_Handover"
          }
          label = "Sales"
        },
        {
          name = "CSM"
          conditionLogic = "(1 OR 2 OR 3) AND 4"
          conditions = [
            {
              leftValueReference = "UserFunction_Var"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Scaled Touch"
              }
            },
            {
              leftValueReference = "UserFunction_Var"
              operator = "Contains"
              rightValue = {
                stringValue = "CSM"
              }
            },
            {
              leftValueReference = "UserFunction_Var"
              operator = "Contains"
              rightValue = {
                stringValue = "Onboarding"
              }
            },
            {
              leftValueReference = "First_Current_Monday_Account.RecordTypeId"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0121t000000IQTnAAO"
              }
            },
          ]
          connector = {
            targetReference = "Handover_Screen"
          }
          label = "CSM"
        },
      ]
    },
    {
      name = "Is_AM_0"
      label = "Is AM?"
      locationX = 2082
      locationY = 88
      defaultConnector = {
        targetReference = "Please_choose_an_account_manager"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_AM"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_Single.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AM"
              }
            },
            {
              leftValueReference = "Get_AM_Details_Single.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AM"
              }
            },
          ]
          connector = {
            targetReference = "Account_Summary"
          }
          label = "Is AM"
        },
        {
          name = "Is_Accounts_Pool"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_Single.Id"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0053X00000Bo8ZZQAZ"
              }
            },
          ]
          connector = {
            targetReference = "Account_Summary"
          }
          label = "Is Accounts Pool"
        },
      ]
    },
    {
      name = "Is_AM_0_0_0"
      label = "Is AM?"
      locationX = 2062
      locationY = 323
      defaultConnector = {
        targetReference = "Please_choose_an_account_manager_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_AM_0_0"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_ALL.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AM"
              }
            },
            {
              leftValueReference = "Get_AM_Details_ALL.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AM"
              }
            },
          ]
          connector = {
            targetReference = "Account_Summary_All"
          }
          label = "Is AM"
        },
        {
          name = "Is_Accounts_Pool_ALL"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_ALL.Id"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0053X00000Bo8ZZQAZ"
              }
            },
          ]
          connector = {
            targetReference = "Account_Summary_All"
          }
          label = "Is Accounts Pool"
        },
      ]
    },
    {
      name = "Is_AM_0_0_0_0_0"
      label = "Is AM?"
      locationX = 2535
      locationY = 95
      defaultConnector = {
        targetReference = "Error_Screen_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_AM_0_0_0_0"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_Single.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AM"
              }
            },
            {
              leftValueReference = "Get_AM_Details_Single.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AM"
              }
            },
          ]
          connector = {
            targetReference = "Create_Handover_on_Company_0"
          }
          label = "Is AM"
        },
        {
          name = "Is_Accounts_Pool_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_Single.Id"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0053X00000Bo8ZZQAZ"
              }
            },
          ]
          connector = {
            targetReference = "Unassigned_Successfully"
          }
          label = "Is Accounts Pool"
        },
      ]
    },
    {
      name = "Is_AM_0_0_0_0_0_0_0"
      label = "Is AM?"
      locationX = 2540
      locationY = 451
      defaultConnector = {
        targetReference = "Error_Screen_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_AM_All_Final"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_ALL.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AM"
              }
            },
            {
              leftValueReference = "Get_AM_Details_ALL.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AM"
              }
            },
          ]
          connector = {
            targetReference = "Create_Handover_on_Company"
          }
          label = "Is AM"
        },
        {
          name = "Is_Accounts_Pool_ALL_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_ALL.Id"
              operator = "EqualTo"
              rightValue = {
                stringValue = "0053X00000Bo8ZZQAZ"
              }
            },
          ]
          connector = {
            targetReference = "Success_unassign_all"
          }
          label = "Is Accounts Pool"
        },
      ]
    },
    {
      name = "MA_Decision_Loop_Count_0"
      label = "MA Decision Loop Count"
      locationX = 1483
      locationY = 473
      defaultConnector = {
        targetReference = "Loop_over_monday_accounts"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_User_Decision"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Loop_over_monday_accounts.Owner.Long_User_ID__c"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
          ]
          connector = {
            targetReference = "Add_current_account_to_users_accounts_0"
          }
          label = "Owner is User Decision"
        },
      ]
    },
    {
      name = "MA_Decision_Loop_Count_0_0_0"
      label = "MA Decision Loop Count"
      locationX = 2276
      locationY = 695
      defaultConnector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_User_Decision_0_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Loop_over_monday_accounts_0.OwnerId"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
          ]
          connector = {
            targetReference = "UpdateAccountDetails_0_0"
          }
          label = "Owner is User Decision"
        },
      ]
    },
    {
      name = "transferornot"
      label = "transferornot"
      locationX = 3304
      locationY = 293
      defaultConnectorLabel = "Don't transfer"
      rules = [
        {
          name = "Transfer"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Handover_Company_CB"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "UpdateAccountDetails_0_0_0"
          }
          label = "Transfer"
        },
      ]
    },
    {
      name = "transferornot_0"
      label = "transferornot"
      locationX = 3306
      locationY = 429
      defaultConnectorLabel = "Don't transfer"
      rules = [
        {
          name = "Transfer_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Handover_Company_CB_0"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "UpdateAccountDetails_0_0_0"
          }
          label = "Transfer"
        },
      ]
    },
    {
      name = "Which_Accounts_to_hand_over"
      label = "Which Accounts to hand over?"
      locationX = 868
      locationY = 369
      defaultConnector = {
        targetReference = "DoNothingScreen"
      }
      defaultConnectorLabel = "None"
      rules = [
        {
          name = "This_account_only"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "This_monday_account_only"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover_Single"
          }
          label = "This account only"
        },
        {
          name = "All_of_owner_s_accounts"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "All_of_my_monday_accounts_from_this_company"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Get_ALL_Monday_Accounts"
          }
          label = "All of owner's accounts"
        },
      ]
    },
    {
      name = "Which_Accounts_to_hand_over_0"
      label = "Which Accounts to hand over?"
      locationX = 1422
      locationY = 204
      defaultConnector = {
        targetReference = "DoNothingScreen"
      }
      defaultConnectorLabel = "None"
      rules = [
        {
          name = "This_account_only_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "This_monday_account_only"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover_Single"
          }
          label = "This account only"
        },
        {
          name = "All_of_owner_s_accounts_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "All_of_my_monday_accounts_from_this_company"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover"
          }
          label = "All of owner's accounts"
        },
      ]
    },
  ]
  dynamicChoiceSets = [
    {
      name = "ChallengesPL"
      dataType = "Picklist"
      picklistField = salesforce.Handover__c.field.Challenges_Risks__c
      picklistObject = salesforce.Handover__c
    },
    {
      name = "CommunicationFRQNCYpl"
      dataType = "Picklist"
      picklistField = salesforce.Handover__c.field.Communication_Frequency__c
      picklistObject = salesforce.Handover__c
    },
    {
      name = "ComplexityPL"
      dataType = "Picklist"
      picklistField = salesforce.Handover__c.field.Client_Complexity__c
      picklistObject = salesforce.Handover__c
    },
    {
      name = "HandoverType"
      dataType = "Picklist"
      picklistField = salesforce.Handover__c.field.Handover_Type__c
      picklistObject = salesforce.Handover__c
    },
    {
      name = "ReasonForMovingPL"
      dataType = "Picklist"
      picklistField = salesforce.Handover__c.field.Reason_For_Moving__c
      picklistObject = salesforce.Handover__c
    },
    {
      name = "UseCasesMPL"
      dataType = "Multipicklist"
      picklistField = salesforce.Opportunity.field.Use_Cases_PL__c
      picklistObject = salesforce.Opportunity
    },
  ]
  formulas = [
    {
      name = "Errors"
      dataType = "Number"
      expression = "{!OwnerIsUserCount} - {!errorsCount}"
      scale = 0
    },
    {
      name = "UserFirstName"
      dataType = "String"
      expression = "{!$User.FirstName}"
    },
    {
      name = "UserFunction_Var"
      dataType = "String"
      expression = "text({!$User.Function__c})"
    },
    {
      name = "UserId"
      dataType = "String"
      expression = "{!$User.Long_User_ID__c}"
    },
    {
      name = "UserProfile_var"
      dataType = "String"
      expression = "{!$User.ProfileId}"
    },
  ]
  interviewLabel = "Monday Account Handover {!$Flow.CurrentDateTime}"
  label = "Handover from Account"
  loops = [
    {
      name = "Loop_over_monday_accounts"
      label = "Loop over monday accounts"
      locationX = 1224
      locationY = 471
      collectionReference = "Get_ALL_Monday_Accounts"
      iterationOrder = "Asc"
      nextValueConnector = {
        targetReference = "MA_Decision_Loop_Count_0"
      }
      noMoreValuesConnector = {
        targetReference = "Above_40_Accounts"
      }
    },
    {
      name = "Loop_over_monday_accounts_0"
      label = "Loop over monday accounts"
      locationX = 2278
      locationY = 465
      collectionReference = "Selected_User_Accounts_To_Transfer"
      iterationOrder = "Asc"
      nextValueConnector = {
        targetReference = "MA_Decision_Loop_Count_0_0_0"
      }
      noMoreValuesConnector = {
        targetReference = "Is_AM_0_0_0_0_0_0_0"
      }
    },
  ]
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "Flow"
  recordCreates = [
    {
      name = "Create_CS_Handover"
      label = "Create CS Handover"
      locationX = 177
      locationY = 727
      connector = {
        targetReference = "Handover_Screen_0"
      }
      faultConnector = {
        targetReference = "Error_Screen"
      }
      inputAssignments = [
        {
          field = "AM__c"
          value = {
            elementReference = "First_Current_Monday_Account.OwnerId"
          }
        },
        {
          field = "ARR__c"
          value = {
            elementReference = "First_Current_Monday_Account.ARR__c"
          }
        },
        {
          field = "Challenges_Risks__c"
          value = {
            elementReference = "Challenges_Risks"
          }
        },
        {
          field = "Communication_Frequency__c"
          value = {
            elementReference = "Communication_Frequency"
          }
        },
        {
          field = "Company__c"
          value = {
            elementReference = "First_Current_Monday_Account.Company__c"
          }
        },
        {
          field = "Handover_Notes__c"
          value = {
            elementReference = "Handover_Notes"
          }
        },
        {
          field = "Handover_Type__c"
          value = {
            elementReference = "Handover_Type"
          }
        },
        {
          field = "Important_Calls__c"
          value = {
            elementReference = "Important_Call"
          }
        },
        {
          field = "Long_Term_Growth__c"
          value = {
            elementReference = "CSM_Long_Term_Score.value"
          }
        },
        {
          field = "Main_Point_of_Contact__c"
          value = {
            elementReference = "Main_points_of_contact"
          }
        },
        {
          field = "Monday_Account__c"
          value = {
            elementReference = "First_Current_Monday_Account.Long_Account_ID__c"
          }
        },
        {
          field = "Parent_Company__c"
          value = {
            elementReference = "First_Current_Monday_Account.ParentId"
          }
        },
        {
          field = "Passed_From__c"
          value = {
            elementReference = "First_Current_Monday_Account.CSM__c"
          }
        },
        {
          field = "Passed_from_Account__c"
          value = {
            booleanValue = true
          }
        },
        {
          field = "Plan_Name__c"
          value = {
            elementReference = "First_Current_Monday_Account.Plan_Name__c"
          }
        },
        {
          field = "Reason_For_Moving__c"
          value = {
            elementReference = "Reason_for_Moving"
          }
        },
        {
          field = "RecordTypeId"
          value = {
            stringValue = "0123X000000eS6NQAU"
          }
        },
        {
          field = "Retention_Score__c"
          value = {
            elementReference = "CSM_Retention_Potential.value"
          }
        },
        {
          field = "Short_Term_Growth__c"
          value = {
            elementReference = "CSM_Short_Term_Score.value"
          }
        },
        {
          field = "Teams__c"
          value = {
            elementReference = "Teams"
          }
        },
        {
          field = "Technical_Complexity__c"
          value = {
            elementReference = "Technical_Complexity"
          }
        },
        {
          field = "Use_Cases_PL__c"
          value = {
            elementReference = "Use_Cases"
          }
        },
      ]
      object = salesforce.Handover__c
    },
    {
      name = "Create_Handover_on_Company"
      label = "Create Handover on Company"
      locationX = 2734
      locationY = 392
      connector = {
        targetReference = "Success_handover_single_screen_0"
      }
      faultConnector = {
        targetReference = "Error_Screen_0"
      }
      inputAssignments = [
        {
          field = "AM__c"
          value = {
            elementReference = "Account_Manager_All.recordId"
          }
        },
        {
          field = "Account_PPU__c"
          value = {
            elementReference = "Account_PPU_All_Accounts"
          }
        },
        {
          field = "Agreement_Information__c"
          value = {
            elementReference = "Agreement_Information_All"
          }
        },
        {
          field = "CSM__c"
          value = {
            elementReference = "First_Current_Monday_Account.CSM__c"
          }
        },
        {
          field = "Company__c"
          value = {
            elementReference = "Which_Company_All.recordId"
          }
        },
        {
          field = "Example_of_Projects__c"
          value = {
            elementReference = "Examples_of_Projects_All"
          }
        },
        {
          field = "Handover_Notes__c"
          value = {
            elementReference = "Notes_to_AM_All"
          }
        },
        {
          field = "Legal_Security_Information__c"
          value = {
            elementReference = "Legal_Security_Information_All"
          }
        },
        {
          field = "Long_Term_Growth__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "Passed_from_Account__c"
          value = {
            booleanValue = true
          }
        },
        {
          field = "Retention_Score__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
        {
          field = "Types_of_Projects__c"
          value = {
            elementReference = "Types_of_Projects_All"
          }
        },
      ]
      object = salesforce.Handover__c
    },
    {
      name = "Create_Handover_on_Company_0"
      label = "Create Handover on Company"
      locationX = 2715
      locationY = 87
      connector = {
        targetReference = "Success_handover_single_screen"
      }
      faultConnector = {
        targetReference = "Error_Screen_0"
      }
      inputAssignments = [
        {
          field = "AM__c"
          value = {
            elementReference = "Account_Manager_SINGLE.recordId"
          }
        },
        {
          field = "Account_PPU__c"
          value = {
            elementReference = "Account_PPU_Single_Account"
          }
        },
        {
          field = "Agreement_Information__c"
          value = {
            elementReference = "Agreement_Information_Single"
          }
        },
        {
          field = "CSM__c"
          value = {
            elementReference = "First_Current_Monday_Account.CSM__c"
          }
        },
        {
          field = "Company__c"
          value = {
            elementReference = "Which_Company_SINGLE.recordId"
          }
        },
        {
          field = "Example_of_Projects__c"
          value = {
            elementReference = "Examples_of_Projects_Single"
          }
        },
        {
          field = "Handover_Notes__c"
          value = {
            elementReference = "Notes_to_AM_All"
          }
        },
        {
          field = "Legal_Security_Information__c"
          value = {
            elementReference = "Legal_Security_Information_Single"
          }
        },
        {
          field = "Long_Term_Growth__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "Passed_from_Account__c"
          value = {
            booleanValue = true
          }
        },
        {
          field = "RecordTypeId"
          value = {
            stringValue = "0123X000000eS6IQAU"
          }
        },
        {
          field = "Retention_Score__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
        {
          field = "Types_of_Projects__c"
          value = {
            elementReference = "Types_of_Projects_Single"
          }
        },
      ]
      object = salesforce.Handover__c
    },
  ]
  recordLookups = [
    {
      name = "First_Current_Monday_Account"
      label = "First Current Monday Account"
      locationX = 177
      locationY = 320
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "CSM_or_Sales"
      }
      faultConnector = {
        targetReference = "Error_Screen"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Flow.CurrentRecord"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Account
      storeOutputAutomatically = true
    },
    {
      name = "Get_ALL_Monday_Accounts"
      label = "Get ALL Monday Account"
      locationX = 1096
      locationY = 628
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Count_accounts"
      }
      faultConnector = {
        targetReference = "Error_Screen"
      }
      filters = [
        {
          field = "ParentId"
          operator = "EqualTo"
          value = {
            elementReference = "CompanyID_Var"
          }
        },
        {
          field = "RecordTypeId"
          operator = "EqualTo"
          value = {
            stringValue = "0121t000000IQTnAAO"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Account
      sortField = salesforce.Account.field.ARR__c
      sortOrder = "Desc"
      storeOutputAutomatically = true
    },
    {
      name = "Get_AM_Details_ALL"
      label = "Get AM Details"
      locationX = 1887
      locationY = 252
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Set_AM_Id_ALL"
      }
      faultConnector = {
        targetReference = "Error_Screen_0"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "Account_Manager_All.recordId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      storeOutputAutomatically = true
    },
    {
      name = "Get_AM_Details_Single"
      label = "Get AM Details"
      locationX = 1886
      locationY = 144
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Set_AM_Id"
      }
      faultConnector = {
        targetReference = "Error_Screen_0"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "Account_Manager_SINGLE.recordId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      storeOutputAutomatically = true
    },
  ]
  recordUpdates = [
    {
      name = "Update_Account"
      label = "Update Account"
      locationX = 388
      locationY = 1000
      connector = {
        targetReference = "nothing"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "First_Current_Monday_Account.Id"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Long_Term_Growth_CSM__c"
          value = {
            elementReference = "CSM_Long_Term_Score.value"
          }
        },
        {
          field = "Retention_Score_CSM__c"
          value = {
            elementReference = "CSM_Retention_Potential.value"
          }
        },
        {
          field = "Short_Term_Growth_CSM__c"
          value = {
            elementReference = "CSM_Short_Term_Score.value"
          }
        },
      ]
      object = salesforce.Account
    },
    {
      name = "UpdateAccountDetails_0"
      label = "UpdateAccountDetails"
      locationX = 2390
      locationY = 85
      connector = {
        targetReference = "Is_AM_0_0_0_0_0"
      }
      faultConnector = {
        targetReference = "Error_Screen_0"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Flow.CurrentRecord"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Account_Potential_Seats__c"
          value = {
            elementReference = "Company_Seats_Potential_Single"
          }
        },
        {
          field = "Last_Ownership_Update__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Long_Term_Growth_Handover__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "OwnerId"
          value = {
            elementReference = "Account_Manager_SINGLE.recordId"
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            elementReference = "Get_AM_Details_Single.ManagerId"
          }
        },
        {
          field = "PreviousOwner__c"
          value = {
            elementReference = "UserId"
          }
        },
        {
          field = "Retention_Score_Handover__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth_Handover__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
      ]
      object = salesforce.Account
    },
    {
      name = "UpdateAccountDetails_0_0"
      label = "UpdateAccountDetails"
      locationX = 2426
      locationY = 689
      connector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
      faultConnector = {
        targetReference = "Add_1_error"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "Loop_over_monday_accounts_0.Id"
          }
        },
        {
          field = "OwnerId"
          operator = "EqualTo"
          value = {
            elementReference = "UserId"
          }
        },
        {
          field = "RecordTypeId"
          operator = "EqualTo"
          value = {
            stringValue = "0121t000000IQTnAAO"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Account_Potential_Seats__c"
          value = {
            elementReference = "Max_Company_Seats_Potential_All"
          }
        },
        {
          field = "Last_Handover_Timestamp__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Last_Ownership_Update__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Long_Term_Growth_Handover__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "OwnerId"
          value = {
            elementReference = "Get_AM_Details_ALL.Id"
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            elementReference = "Get_AM_Details_ALL.ManagerId"
          }
        },
        {
          field = "PreviousOwner__c"
          value = {
            elementReference = "Loop_over_monday_accounts_0.OwnerId"
          }
        },
        {
          field = "RecordTypeId"
          value = {
            stringValue = "0123X000000eS6IQAU"
          }
        },
        {
          field = "Retention_Score_Handover__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth_Handover__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
      ]
      object = salesforce.Account
    },
    {
      name = "UpdateAccountDetails_0_0_0"
      label = "UpdateAccountDetails"
      locationX = 3490
      locationY = 367
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "CompanyID_Var"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Last_Ownership_Update__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Long_Term_Growth_Handover__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "OwnerId"
          value = {
            elementReference = "AMid"
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            elementReference = "AM_Manager_Id"
          }
        },
        {
          field = "PreviousOwner__c"
          value = {
            elementReference = "UserId"
          }
        },
        {
          field = "Retention_Score_Handover__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth_Handover__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
      ]
      object = salesforce.Account
    },
  ]
  screens = [
    {
      name = "Account_Handover"
      label = "Account Handover"
      locationX = 456
      locationY = 365
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Company_or_monday_account"
      }
      fields = [
        {
          name = "IntroMessage"
          fieldText = "<p>Hey {!UserFirstName},</p><p>You're about to begin the account handover process.</p><p><br></p><p>First - would you like the to transfer this account only, or all accounts from this company that are owned by you?</p>"
          fieldType = "DisplayText"
        },
        {
          name = "This_monday_account_only"
          dataType = "Boolean"
          defaultValue = {
            booleanValue = false
          }
          fieldText = "This account only"
          fieldType = "InputField"
          helpText = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">This option will transfer all of the monday accounts from the monday account's parent company that are owned by {!UserFirstName}</span></p>"
          isRequired = true
          validationRule = {
            errorMessage = "<p>Please choose only one of the options</p>"
            formulaExpression = '''
(({!All_of_my_monday_accounts_from_this_company} = True) && ({!This_monday_account_only} = False)) ||
(({!All_of_my_monday_accounts_from_this_company} = False) && ({!This_monday_account_only} = True))
'''
          }
        },
        {
          name = "All_of_my_monday_accounts_from_this_company"
          dataType = "Boolean"
          defaultValue = {
            booleanValue = false
          }
          fieldText = "All of my accounts from this company"
          fieldType = "InputField"
          helpText = "<p>This option will transfer all of the monday accounts from the monday account's parent company that are owned by {!UserFirstName}</p>"
          isRequired = true
          validationRule = {
            errorMessage = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">Please choose only one of the options</span></p>"
            formulaExpression = '''
(({!All_of_my_monday_accounts_from_this_company} = True) && ({!This_monday_account_only} = False)) ||
(({!All_of_my_monday_accounts_from_this_company} = False) && ({!This_monday_account_only} = True))
'''
          }
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Account_Summary"
      label = "Account Summary"
      locationX = 2254
      locationY = 87
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "UpdateAccountDetails_0"
      }
      fields = [
        {
          name = "FinalStageText"
          fieldText = "<p>From your knowledge of {!First_Current_Monday_Account.Parent.Name}, please provide the following information:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Short_Term_Growth_Potential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Short Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "PotentialShortTerm"
              name = "value"
            },
          ]
        },
        {
          name = "Long_Term_Growth_Potential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Long Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Potential_Long_Term"
              name = "value"
            },
          ]
        },
        {
          name = "retentionpotential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Retention Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Retention_Potential"
              name = "value"
            },
          ]
        },
        {
          name = "Company_Seats_Potential_Single"
          dataType = "Number"
          fieldText = "Company Seats Potential"
          fieldType = "InputField"
          helpText = "<p>From your knowledge of {!CompanyName_Var}, how many seats can this account grow to? (Not limited to this opportunity)</p>"
          isRequired = true
          scale = 0
        },
        {
          name = "NotesTitle"
          fieldText = "<p><b><u>What should the AM know about this account?</u></b></p>"
          fieldType = "DisplayText"
        },
        {
          name = "Types_of_Projects_Single"
          fieldText = "Account Use Cases"
          fieldType = "LargeTextArea"
          helpText = "<p>Account use cases</p>"
          isRequired = true
        },
        {
          name = "Examples_of_Projects_Single"
          fieldText = "Examples"
          fieldType = "LargeTextArea"
          isRequired = false
        },
        {
          name = "Account_PPU_Single_Account"
          dataType = "Number"
          fieldText = "Account PPU"
          fieldType = "InputField"
          helpText = "<p>What is the agreed price per user for this account?</p>"
          isRequired = true
          scale = 0
        },
        {
          name = "Agreement_Information_Single"
          dataType = "String"
          fieldText = "Agreement Information"
          fieldType = "InputField"
          helpText = "<p>Please add information about: </p><p>Discounts, Free Users, Volume Pricing, etc.</p>"
          isRequired = true
        },
        {
          name = "Legal_Security_Information_Single"
          dataType = "String"
          fieldText = "Legal/Security Information"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Notes_to_AM_Single"
          fieldText = "Notes to AM"
          fieldType = "LargeTextArea"
          isRequired = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Account_Summary_All"
      label = "Account Summary"
      locationX = 2279
      locationY = 332
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
      fields = [
        {
          name = "FinalStageText_0"
          fieldText = "<p>From your knowledge of {!First_Current_Monday_Account.Parent.Name}, please provide the following information:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Short_Term_Growth_Potential_All"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Short Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "PotentialShortTerm"
              name = "value"
            },
          ]
        },
        {
          name = "Long_Term_Growth_Potential_All"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Long Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Potential_Long_Term"
              name = "value"
            },
          ]
        },
        {
          name = "retentionpotential_All"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Retention Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Retention_Potential"
              name = "value"
            },
          ]
        },
        {
          name = "Max_Company_Seats_Potential_All"
          dataType = "Number"
          fieldText = "Max. Company Seats Potential"
          fieldType = "InputField"
          helpText = "<p>From your knowledge of {!CompanyName_Var}, how many seats can this company grow to? (not limited to this specific account)</p>"
          isRequired = true
          scale = 0
        },
        {
          name = "NotesTitle_All"
          fieldText = "<p><b><u>What should the AM know about this account?</u></b></p>"
          fieldType = "DisplayText"
        },
        {
          name = "Types_of_Projects_All"
          fieldText = "Account Use Cases"
          fieldType = "LargeTextArea"
          isRequired = true
        },
        {
          name = "Examples_of_Projects_All"
          fieldText = "Examples of Use Cases"
          fieldType = "LargeTextArea"
          isRequired = false
        },
        {
          name = "Account_PPU_All_Accounts"
          dataType = "Number"
          fieldText = "Account PPU"
          fieldType = "InputField"
          helpText = "<p>What is the agreed price per user with this account?</p>"
          isRequired = true
          scale = 0
        },
        {
          name = "Agreement_Information_All"
          dataType = "String"
          fieldText = "Agreement Information"
          fieldType = "InputField"
          helpText = "<p>Please add information about: </p><p>Discounts, Free Users, Volume Pricing, etc.</p>"
          isRequired = true
        },
        {
          name = "Legal_Security_Information_All"
          dataType = "String"
          fieldText = "Legal/Security Information"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Notes_to_AM_All"
          fieldText = "Notes to AM"
          fieldType = "LargeTextArea"
          isRequired = true
        },
        {
          name = "NoteOfHandover"
          fieldText = "<p><span style=\"font-size: 16px; color: rgb(8, 4, 237);\">By clicking next, the owner will be changed to </span><b style=\"font-size: 16px; color: rgb(8, 4, 237);\">{!Get_AM_Details_ALL.Name}</b><span style=\"font-size: 16px; color: rgb(8, 4, 237);\"> and a handover will be created on the </span><b style=\"font-size: 16px; color: rgb(8, 4, 237);\">{!Which_Company_All.recordName}</b><span style=\"font-size: 16px; color: rgb(8, 4, 237);\"> company record</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "DoNothingScreen"
      label = "No Choice"
      locationX = 875
      locationY = 197
      allowBack = true
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "NoChoiceMessage"
          fieldText = "<p>You haven't selected anything, or there are no monday accounts owned by you from this company.</p><p>To go back and and choose again, click on 'Previous'.</p><p>To exit without doing anything, click on 'Finish'.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error_Screen"
      label = "Error Screen"
      locationX = 560
      locationY = 760
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "ErrorText"
          fieldText = "<p><b><u>Something went wrong.</u></b></p><p>In case you've filled in some data, it will be sent together with the error to the admin.</p><p><br></p><p>Please also send this entire error message to the biz-ops team:</p><p><span style=\"color: rgb(160, 28, 28);\">{!$Flow.FaultMessage}</span></p><p><br></p><p>Record ID: </p><p><span style=\"color: rgb(160, 28, 28);\">{!$Flow.CurrentRecord}</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error_Screen_0"
      label = "Error Screen"
      locationX = 2400
      locationY = 255
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "ErrorText_0"
          fieldText = "<p><b><u>Something went wrong.</u></b></p><p>In case you've filled in some data, it will be sent together with the error to the admin.</p><p><br></p><p>Please also send this entire error message to the biz-ops team:</p><p><span style=\"color: rgb(160, 28, 28);\">{!$Flow.FaultMessage}</span></p><p><br></p><p>Record ID: </p><p><span style=\"color: rgb(160, 28, 28);\">{!$Flow.CurrentRecord}</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Handover_Company"
      label = "Handover Company"
      locationX = 3187
      locationY = 291
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "transferornot"
      }
      fields = [
        {
          name = "NearlyDone"
          fieldText = "<p>Nearly Done!</p><p>Please check the box if you want the company <b>({!First_Current_Monday_Account.Parent.Name})</b> to be handed over as well (or leave it blank if not), and click 'Finish'.</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Handover_Company_CB"
          dataType = "Boolean"
          fieldText = "Handover Company"
          fieldType = "InputField"
          isRequired = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Handover_Company_0"
      label = "Handover Company"
      locationX = 3187
      locationY = 428
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "transferornot_0"
      }
      fields = [
        {
          name = "NearlyDone_0"
          fieldText = "<p>Nearly Done!</p><p>Please check the box if you want the company <b>({!First_Current_Monday_Account.Name})</b> to be handed over as well (or leave it blank if not), and click 'Finish'.</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Handover_Company_CB_0"
          dataType = "Boolean"
          fieldText = "Handover Company"
          fieldType = "InputField"
          isRequired = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Handover_Screen"
      label = "Handover Screen"
      locationX = 173
      locationY = 631
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Create_CS_Handover"
      }
      fields = [
        {
          name = "Handover_Type"
          choiceReferences = [
            "HandoverType",
          ]
          dataType = "String"
          fieldText = "Handover Type"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "GutScore_header"
          fieldText = "<p>What is your gut feeling regarding this account's potential? Please help us score these accounts based on your past interactions and knowledge:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "CSM_Long_Term_Score"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Long Term Upgrade Potential"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "CSM_Short_Term_Score"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Short Term Upgrade Potential"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "CSM_Retention_Potential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Retention Potential"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Main_points_of_contact"
          dataType = "String"
          fieldText = "Main points of contact"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Use_Cases"
          choiceReferences = [
            "UseCasesMPL",
          ]
          dataType = "String"
          fieldText = "Use Cases"
          fieldType = "MultiSelectPicklist"
          isRequired = true
        },
        {
          name = "Teams"
          dataType = "String"
          fieldText = "Teams"
          fieldType = "InputField"
          isRequired = true
        },
        {
          name = "Reason_for_Moving"
          choiceReferences = [
            "ReasonForMovingPL",
          ]
          dataType = "String"
          fieldText = "Reason for Moving"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Challenges_Risks"
          choiceReferences = [
            "ChallengesPL",
          ]
          dataType = "String"
          fieldText = "Challenges/Risks"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Technical_Complexity"
          choiceReferences = [
            "ComplexityPL",
          ]
          dataType = "String"
          fieldText = "Technical Complexity"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Communication_Frequency"
          choiceReferences = [
            "CommunicationFRQNCYpl",
          ]
          dataType = "String"
          fieldText = "Communication Frequency"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Important_Call"
          dataType = "String"
          fieldText = "Important Call to Listen to (Link)"
          fieldType = "InputField"
          isRequired = false
        },
        {
          name = "Handover_Notes"
          fieldText = "Handover Notes"
          fieldType = "LargeTextArea"
          isRequired = false
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Handover_Screen_0"
      label = "Handover Screen"
      locationX = 177
      locationY = 872
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Success"
      }
      fields = [
        {
          name = "UploadText"
          fieldText = "<p>Would you like to attach files to the handover? Leave blank if not.</p>"
          fieldType = "DisplayText"
        },
        {
          name = "UploadFile_0"
          extensionName = "forceContent:fileUpload"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Upload File"
              }
            },
            {
              name = "recordId"
              value = {
                elementReference = "Create_CS_Handover"
              }
            },
            {
              name = "accept"
              value = {
                stringValue = ".png,.xlsx,.pdf,.doc,.ppt,.csv"
              }
            },
            {
              name = "multiple"
              value = {
                booleanValue = true
              }
            },
            {
              name = "title"
              value = {
                stringValue = "Attach relevant documents for this account"
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "IDsOfFiles"
              name = "contentDocIds"
            },
            {
              assignToReference = "UploadedFileNames"
              name = "fileNames"
            },
          ]
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Monday_Account_Handover"
      label = "Monday Account Handover"
      locationX = 1670
      locationY = 252
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Count_Selected_Accounts"
      }
      fields = [
        {
          name = "Which_Company_All"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "fieldApiName"
              value = {
                stringValue = "Company__c"
              }
            },
            {
              name = "label"
              value = {
                stringValue = "Company Name"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "recordId"
              value = {
                elementReference = "CompanyID_Var"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Selection"
          fieldText = "<p><br></p><p><b><u>Select Monday Accounts</u></b></p><p>Please select the accounts you want to transfer:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "AccountsList"
          extensionName = "c:datatableFSC"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "mydata_standard1"
              value = {
                elementReference = "UsersAccounts"
              }
            },
            {
              name = "column01_fieldName"
              value = {
                stringValue = "Name"
              }
            },
            {
              name = "column01_label"
              value = {
                stringValue = "Name"
              }
            },
            {
              name = "column02_fieldName"
              value = {
                stringValue = "Owner_Name__c"
              }
            },
            {
              name = "column02_label"
              value = {
                stringValue = "Owner"
              }
            },
            {
              name = "column02_align"
              value = {
                stringValue = "mid"
              }
            },
            {
              name = "column03_fieldName"
              value = {
                stringValue = "Plan_Name__c"
              }
            },
            {
              name = "column03_label"
              value = {
                stringValue = "Plan"
              }
            },
            {
              name = "column04_align"
              value = {
                stringValue = "mid"
              }
            },
            {
              name = "column04_fieldName"
              value = {
                stringValue = "ARR__c"
              }
            },
            {
              name = "column04_label"
              value = {
                stringValue = "ARR"
              }
            },
            {
              name = "column04_type"
              value = {
                stringValue = "Number"
              }
            },
            {
              name = "column05_fieldName"
              value = {
                stringValue = "WAPP__c"
              }
            },
            {
              name = "column05_label"
              value = {
                stringValue = "WAPP"
              }
            },
            {
              name = "column05_align"
              value = {
                stringValue = "mid"
              }
            },
            {
              name = "selectedRows_standard1"
              value = {
                elementReference = "Selected_User_Accounts_To_Transfer"
              }
            },
            {
              name = "column06_fieldName"
              value = {
                stringValue = "Account_Country__c"
              }
            },
            {
              name = "column06_label"
              value = {
                stringValue = "Country"
              }
            },
            {
              name = "column05_type"
              value = {
                stringValue = "number"
              }
            },
            {
              name = "column05_width"
              value = {
                numberValue = 40
              }
            },
            {
              name = "column04_width"
              value = {
                numberValue = 50
              }
            },
            {
              name = "column06_align"
              value = {
                stringValue = "mid"
              }
            },
            {
              name = "column03_editable"
              value = {
                booleanValue = false
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "AllAccounts"
          fieldText = "<p><br></p><p><b style=\"color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);\"><u>﻿Account Manager</u></b></p><p>Please choose an account manager to handover the accounts to:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Account_Manager_All"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Account Manager"
              }
            },
            {
              name = "fieldApiName"
              value = {
                stringValue = "CreatedById"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Note2"
          fieldText = "<p><br></p><p>*Picking 'Accounts Pool' will un-assign yourself from all of the accounts that you own in {!First_Current_Monday_Account.Parent.Name}</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Monday_Account_Handover_Single"
      label = "Monday Account Handover"
      locationX = 1670
      locationY = 136
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Get_AM_Details_Single"
      }
      fields = [
        {
          name = "Which_Company_SINGLE"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "fieldApiName"
              value = {
                stringValue = "Company__c"
              }
            },
            {
              name = "label"
              value = {
                stringValue = "Company Name"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "recordId"
              value = {
                elementReference = "CompanyID_Var"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "SingleAccounts_Screen"
          fieldText = "<p>You've chosen to handover {!First_Current_Monday_Account.Name} only.</p><p><br></p><p><b><u>Account Manager</u></b></p><p>Please choose an account manager to handover the account to:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Account_Manager_SINGLE"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Account Manager"
              }
            },
            {
              name = "fieldApiName"
              value = {
                stringValue = "CreatedById"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Note1"
          fieldText = "<p><br></p><p><span style=\"font-size: 12px;\">*Picking 'Accounts Pool' will un-assign yourself from this account</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Please_choose_an_account_manager"
      label = "Please choose an account manager"
      locationX = 1884
      locationY = 15
      allowBack = true
      allowFinish = false
      allowPause = false
      connector = {
        targetReference = "Monday_Account_Handover_Single"
      }
      fields = [
        {
          name = "MustBeAM"
          fieldText = "<p>Please choose an account manager.</p><p>{!Get_AM_Details_Single.Name}'s function is <span style=\"color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);\">{!Get_AM_Details_Single.Function__c}.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Please_choose_an_account_manager_0"
      label = "Please choose an account manager"
      locationX = 1670
      locationY = 399
      allowBack = true
      allowFinish = false
      allowPause = false
      connector = {
        targetReference = "Monday_Account_Handover"
      }
      fields = [
        {
          name = "MustBeAM_0"
          fieldText = "<p>Please choose an account manager.</p><p>{!Get_AM_Details_ALL.Name}'s function is <span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">{!Get_AM_Details_ALL.Function__c}.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Success"
      label = "Success"
      locationX = 177
      locationY = 1000
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Update_Account"
      }
      fields = [
        {
          name = "CScreatedSuccesfully"
          fieldText = "<p>Handover created successfully!</p><p>View the handover here:</p><p>https://monday.lightning.force.com/lightning/r/Handover__c/{!Create_CS_Handover}<span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">/view</span></p><p><br></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Success_handover_single_screen"
      label = "Success_handover_single"
      locationX = 2879
      locationY = 88
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Company_Transfer"
      }
      fields = [
        {
          name = "Success_Handover_Single"
          fieldText = "<p>You've successfully handed over this account. A handover record has been created on the company.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Success_handover_single_screen_0"
      label = "Success_handover_single"
      locationX = 2875
      locationY = 443
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Company_Transfer"
      }
      fields = [
        {
          name = "Success_Handover_Single_0"
          fieldText = "<p>Success, {!selected_Accounts} records have been handed over successfully!</p><p>A handover record has been created on the company.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Success_unassign_all"
      label = "Success_unassign_all"
      locationX = 2882
      locationY = 588
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Company_Transfer"
      }
      fields = [
        {
          name = "Success_unassign_all_text"
          fieldText = "<p>You've successfully un-assigned yourself from {!Errors} accounts.</p><p>There were {!errorsCount} errors.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Unassigned_Successfully"
      label = "Unassigned Successfully"
      locationX = 2878
      locationY = 279
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Company_Transfer"
      }
      fields = [
        {
          name = "successfully_unassigned"
          fieldText = "<p><b><u>Success!</u></b></p><p>You've been successfully un-assigned from the selected account.</p><p>The account is now available for re-distribution if necessary.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
  ]
  stages = [
    {
      name = "Account_Summary_Notes"
      isActive = true
      label = "Account Summary"
      stageOrder = 15
    },
    {
      name = "Choose_Accounts"
      isActive = true
      label = "Choose Accounts"
      stageOrder = 5
    },
    {
      name = "Choose_AM"
      isActive = true
      label = "Choose AM"
      stageOrder = 10
    },
  ]
  start = {
    locationX = 50
    locationY = 65
    connector = {
      targetReference = "SetRecordID"
    }
  }
  status = "Active"
  subflows = [
    {
      name = "nothing"
      label = "nothing"
      locationX = 605
      locationY = 999
      flowName = "Do_nothing"
    },
  ]
  variables = [
    {
      name = "AM_Manager_Id"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "AMid"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "CompanyID"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "CompanyID_Var"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "CompanyName_Var"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "CompanyOwnerId_Var"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "errorsCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "FilestoUpload"
      dataType = "SObject"
      isCollection = true
      isInput = false
      isOutput = false
      objectType = "Attachment"
    },
    {
      name = "IDsOfFiles"
      dataType = "String"
      isCollection = true
      isInput = true
      isOutput = false
    },
    {
      name = "MAsCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "Owner_Paying_MAs"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "OwnerIsUserCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "PayingAccounts"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "PayingAccountsCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "Potential_Long_Term"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "PotentialShortTerm"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "recordId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "Retention_Potential"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "selected_Accounts"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "Selected_User_Accounts_To_Transfer"
      dataType = "SObject"
      isCollection = true
      isInput = true
      isOutput = true
      objectType = salesforce.Account
    },
    {
      name = "StartedFromCompany"
      dataType = "Boolean"
      isCollection = false
      isInput = true
      isOutput = true
      value = {
        booleanValue = false
      }
    },
    {
      name = "UploadedFileNames"
      dataType = "String"
      isCollection = true
      isInput = true
      isOutput = false
    },
    {
      name = "UsersAccounts"
      dataType = "SObject"
      isCollection = true
      isInput = true
      isOutput = true
      objectType = salesforce.Account
    },
  ]
}
