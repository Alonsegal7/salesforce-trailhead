salesforce.Flow Set_Account_Owner_Manager {
  fullName = "Set_Account_Owner_Manager"
  assignments = [
    {
      name = "Set_CPM_as_Manager"
      label = "Set CPM as Manager"
      locationX = 724
      locationY = 271
      assignmentItems = [
        {
          assignToReference = "$Record.Owner_s_Manager__c"
          operator = "Assign"
          value = {
            elementReference = "$Record.OwnerId"
          }
        },
      ]
    },
    {
      name = "Set_Owner_s_Manager"
      label = "Set Owner's Manager"
      locationX = 879
      locationY = 56
      assignmentItems = [
        {
          assignToReference = "$Record.Owner_s_Manager__c"
          operator = "Assign"
          value = {
            elementReference = "Get_Account_Owner.User_Manager_Long_Id__c"
          }
        },
      ]
    },
  ]
  decisions = [
    {
      name = "Is_User_Decision"
      label = "Is User"
      locationX = 344
      locationY = 62
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "is_user"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "$Record.OwnerId"
              operator = "StartsWith"
              rightValue = {
                stringValue = "005"
              }
            },
          ]
          connector = {
            targetReference = "Get_Account_Owner"
          }
          label = "is user"
        },
      ]
    },
    {
      name = "User_Function"
      label = "User Function"
      locationX = 711
      locationY = 55
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_CPM_Owner"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_Account_Owner.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Partners- Channel Manager"
              }
            },
            {
              leftValueReference = "Get_Account_Owner.IsActive"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Set_CPM_as_Manager"
          }
          label = "Is CPM"
        },
        {
          name = "Non_CPM"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_Account_Owner.Function__c"
              operator = "NotEqualTo"
              rightValue = {
                stringValue = "Partners- Channel Manager"
              }
            },
            {
              leftValueReference = "Get_Account_Owner.IsActive"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Set_Owner_s_Manager"
          }
          label = "Non CPM"
        },
      ]
    },
  ]
  interviewLabel = "Set Account Owner Manager {!$Flow.CurrentDateTime}"
  label = "Set Account Owner Manager"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "AutoLaunchedFlow"
  recordLookups = [
    {
      name = "Get_Account_Owner"
      label = "Get Account Owner"
      locationX = 559
      locationY = 55
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "User_Function"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.OwnerId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      storeOutputAutomatically = true
    },
  ]
  start = {
    locationX = 158
    locationY = 60
    connector = {
      targetReference = "Is_User_Decision"
    }
    object = salesforce.Account
    triggerType = "RecordBeforeSave"
  }
  status = "Draft"
  variables = [
    {
      name = "nothing"
      dataType = "String"
      isCollection = false
      isInput = false
      isOutput = true
      value = {
        stringValue = "0"
      }
    },
  ]
}
