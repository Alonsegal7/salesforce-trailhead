salesforce.Flow Relation_Communication_Daily {
  fullName = "Relation_Communication_Daily"
  assignments = [
    {
      name = "Set_Last_Email_Communication"
      label = "Set Last Email Communication"
      locationX = 985
      locationY = 49
      assignmentItems = [
        {
          assignToReference = "lastEmail"
          operator = "Assign"
          value = {
            elementReference = "Get_Last_Email.ActivityDate"
          }
        },
      ]
      connector = {
        targetReference = "Verbal_Communication_Found"
      }
    },
    {
      name = "Set_Last_Verbal_Communication"
      label = "Set Last Verbal Communication"
      locationX = 913
      locationY = 372
      assignmentItems = [
        {
          assignToReference = "lastVerbal"
          operator = "Assign"
          value = {
            elementReference = "Get_Last_Verbal_Communication.ActivityDate"
          }
        },
      ]
      connector = {
        targetReference = "Update_Relationship"
      }
    },
  ]
  decisions = [
    {
      name = "Last_Email_Found"
      label = "Last Email Found?"
      locationX = 816
      locationY = 49
      defaultConnector = {
        targetReference = "Verbal_Communication_Found"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "email_found"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_Last_Email"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "Set_Last_Email_Communication"
          }
          label = "email found"
        },
      ]
    },
    {
      name = "Verbal_Communication_Found"
      label = "Verbal Communication Found?"
      locationX = 899
      locationY = 222
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Verbal_Found"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_Last_Verbal_Communication"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "Set_Last_Verbal_Communication"
          }
          label = "Verbal Found"
        },
      ]
    },
  ]
  interviewLabel = "Relation Communication {!$Flow.CurrentDateTime}"
  label = "Relation Communication_Daily"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "AutoLaunchedFlow"
  recordLookups = [
    {
      name = "Get_Last_Email"
      label = "Get Last Email"
      locationX = 407
      locationY = 54
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Get_Last_Verbal_Communication"
      }
      filters = [
        {
          field = "OwnerId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.OwnerId"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Email"
          }
        },
        {
          field = "WhatId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.monday_Account__c"
          }
        },
        {
          field = "WhoId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Contact__c"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Task
      queriedFields = [
        salesforce.Task.field.Id,
        salesforce.Task.field.ActivityDate,
      ]
      sortField = salesforce.Task.field.ActivityDate
      sortOrder = "Desc"
      storeOutputAutomatically = true
    },
    {
      name = "Get_Last_Verbal_Communication"
      label = "Get Last Verbal Communication"
      locationX = 632
      locationY = 53
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Last_Email_Found"
      }
      filters = [
        {
          field = "OwnerId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.OwnerId"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Call"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Demo"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Meeting"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Exploratory call"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Advanced Training"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Basic Training"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Process / Boards Optimisation"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Strategic Session"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "Webinar"
          }
        },
        {
          field = "Type"
          operator = "EqualTo"
          value = {
            stringValue = "QBR"
          }
        },
        {
          field = "WhatId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.monday_Account__c"
          }
        },
        {
          field = "WhoId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Contact__c"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Task
      queriedFields = [
        salesforce.Task.field.Id,
        salesforce.Task.field.ActivityDate,
      ]
      sortField = salesforce.Task.field.ActivityDate
      sortOrder = "Desc"
      storeOutputAutomatically = true
    },
  ]
  recordUpdates = [
    {
      name = "Update_Relationship"
      label = "Update Relationship"
      locationX = 914
      locationY = 551
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Id"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Last_Email_Communication__c"
          value = {
            elementReference = "lastEmail"
          }
        },
        {
          field = "Last_Verbal_Communication__c"
          value = {
            elementReference = "lastVerbal"
          }
        },
      ]
      object = salesforce.Relationship__c
    },
  ]
  start = {
    locationX = 67
    locationY = 54
    connector = {
      targetReference = "Get_Last_Email"
    }
    object = salesforce.Relationship__c
    schedule = {
      frequency = "Daily"
      startDate = "2020-07-07"
      startTime = "10:00:00.000Z"
    }
    triggerType = "Scheduled"
  }
  status = "Active"
  variables = [
    {
      name = "lastEmail"
      dataType = "Date"
      isCollection = false
      isInput = false
      isOutput = false
    },
    {
      name = "lastVerbal"
      dataType = "Date"
      isCollection = false
      isInput = false
      isOutput = false
    },
    {
      name = "recordId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = false
    },
    {
      name = "relnamevar"
      dataType = "String"
      isCollection = false
      isInput = false
      isOutput = false
    },
  ]
}
