salesforce.Flow Monday_Account_Handover {
  fullName = "Monday_Account_Handover"
  assignments = [
    {
      name = "Count_accounts"
      label = "Count accounts"
      locationX = 707
      locationY = 476
      assignmentItems = [
        {
          assignToReference = "MAsCount"
          operator = "AssignCount"
          value = {
            elementReference = "Get_ALL_Monday_Accounts"
          }
        },
      ]
      connector = {
        targetReference = "GetCompanysMondayAccounts"
      }
    },
    {
      name = "Owner_Is_User_Assignment"
      label = "Owner Is User Assignment"
      locationX = 1036
      locationY = 825
      assignmentItems = [
        {
          assignToReference = "OwnerIsUserCount"
          operator = "Add"
          value = {
            numberValue = 1
          }
        },
      ]
      connector = {
        targetReference = "GetCompanysMondayAccounts"
      }
    },
    {
      name = "PayingAccountsAssignment"
      label = "PayingAccountsAssignment"
      locationX = 1225
      locationY = 444
      assignmentItems = [
        {
          assignToReference = "PayingAccountsCount"
          operator = "Add"
          value = {
            numberValue = 1
          }
        },
      ]
      connector = {
        targetReference = "MA_Decision_Loop_Count_0_0"
      }
    },
    {
      name = "SetRecordID"
      label = "SetRecordID"
      locationX = 177
      locationY = 165
      assignmentItems = [
        {
          assignToReference = "$Flow.CurrentRecord"
          operator = "Assign"
          value = {
            elementReference = "recordId"
          }
        },
      ]
      connector = {
        targetReference = "Account_Handover"
      }
    },
    {
      name = "UserPaying"
      label = "UserPaying"
      locationX = 1216
      locationY = 841
      assignmentItems = [
        {
          assignToReference = "Owner_Paying_MAs"
          operator = "Add"
          value = {
            numberValue = 1
          }
        },
      ]
      connector = {
        targetReference = "GetCompanysMondayAccounts"
      }
    },
  ]
  decisions = [
    {
      name = "Above_50_Accounts"
      label = "Above 50 Accounts?"
      locationX = 729
      locationY = 111
      defaultConnector = {
        targetReference = "Which_Accounts_to_hand_over_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "above_40_accounts_option"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "MAsCount"
              operator = "GreaterThanOrEqualTo"
              rightValue = {
                numberValue = 50
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover_Single"
          }
          label = "above 40 accounts"
        },
      ]
    },
    {
      name = "Is_AM_0"
      label = "Is AM?"
      locationX = 1635
      locationY = 88
      defaultConnector = {
        targetReference = "Please_choose_an_account_manager"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_AM"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_AM_Details_0.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AM"
              }
            },
            {
              leftValueReference = "Get_AM_Details_0.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AM"
              }
            },
          ]
          connector = {
            targetReference = "Account_Summary"
          }
          label = "Is AM"
        },
      ]
    },
    {
      name = "Is_AM_0_0_0"
      label = "Is AM?"
      locationX = 1615
      locationY = 323
      defaultConnector = {
        targetReference = "Please_choose_an_account_manager_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Is_AM_0_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_AM_Details.Function__c"
              operator = "EqualTo"
            },
            {
              leftValueReference = "Get_AM_Details.Function__c"
              operator = "EqualTo"
            },
          ]
          connector = {
            targetReference = "Account_Summary_0"
          }
          label = "Is AM"
        },
      ]
    },
    {
      name = "MA_Decision_Loop_Count"
      label = "MA Decision Loop Count"
      locationX = 1016
      locationY = 445
      defaultConnector = {
        targetReference = "MA_Decision_Loop_Count_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Paying_Account"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "GetCompanysMondayAccounts.ARR__c"
              operator = "GreaterThan"
              rightValue = {
                numberValue = 0
              }
            },
          ]
          connector = {
            targetReference = "PayingAccountsAssignment"
          }
          label = "Paying Account?"
        },
      ]
    },
    {
      name = "MA_Decision_Loop_Count_0"
      label = "MA Decision Loop Count"
      locationX = 1021
      locationY = 643
      defaultConnector = {
        targetReference = "GetCompanysMondayAccounts"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_User_Decision"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "GetCompanysMondayAccounts.OwnerId"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
          ]
          connector = {
            targetReference = "Owner_Is_User_Assignment"
          }
          label = "Owner is User Decision"
        },
      ]
    },
    {
      name = "MA_Decision_Loop_Count_0_0"
      label = "MA Decision Loop Count"
      locationX = 1216
      locationY = 635
      defaultConnector = {
        targetReference = "GetCompanysMondayAccounts"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_User_Decision_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "GetCompanysMondayAccounts.OwnerId"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
          ]
          connector = {
            targetReference = "UserPaying"
          }
          label = "Owner is User Decision"
        },
      ]
    },
    {
      name = "MA_Decision_Loop_Count_0_0_0"
      label = "MA Decision Loop Count"
      locationX = 1819
      locationY = 651
      defaultConnector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_User_Decision_0_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "GetCompanysMondayAccounts.OwnerId"
              operator = "EqualTo"
              rightValue = {
                elementReference = "UserId"
              }
            },
          ]
          connector = {
            targetReference = "UpdateAccountDetails_0_0"
          }
          label = "Owner is User Decision"
        },
      ]
    },
    {
      name = "Which_Accounts_to_hand_over"
      label = "Which Accounts to hand over?"
      locationX = 172
      locationY = 436
      defaultConnector = {
        targetReference = "DoNothingScreen"
      }
      defaultConnectorLabel = "None"
      rules = [
        {
          name = "This_account_only"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "This_monday_account_only"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "First_Current_Monday_Account_0"
          }
          label = "This account only"
        },
        {
          name = "All_of_owner_s_accounts"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "All_of_my_monday_accounts_from_this_company"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "First_Current_Monday_Account"
          }
          label = "All of owner's accounts"
        },
      ]
    },
    {
      name = "Which_Accounts_to_hand_over_0"
      label = "Which Accounts to hand over?"
      locationX = 955
      locationY = 216
      defaultConnector = {
        targetReference = "DoNothingScreen"
      }
      defaultConnectorLabel = "None"
      rules = [
        {
          name = "This_account_only_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "This_monday_account_only"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover_Single"
          }
          label = "This account only"
        },
        {
          name = "All_of_owner_s_accounts_0"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "All_of_my_monday_accounts_from_this_company"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Monday_Account_Handover"
          }
          label = "All of owner's accounts"
        },
      ]
    },
  ]
  formulas = [
    {
      name = "UserFirstName"
      dataType = "String"
      expression = "{!$User.FirstName}"
    },
    {
      name = "UserId"
      dataType = "String"
      expression = "{!$User.Id}"
    },
  ]
  interviewLabel = "Monday Account Handover {!$Flow.CurrentDateTime}"
  label = "Monday Account Handover"
  loops = [
    {
      name = "GetCompanysMondayAccounts"
      label = "Get Companys Monday Accounts"
      locationX = 821
      locationY = 476
      collectionReference = "Get_ALL_Monday_Accounts"
      iterationOrder = "Asc"
      nextValueConnector = {
        targetReference = "MA_Decision_Loop_Count"
      }
      noMoreValuesConnector = {
        targetReference = "Above_50_Accounts"
      }
    },
    {
      name = "Loop_over_monday_accounts_0"
      label = "Loop over monday accounts"
      locationX = 1819
      locationY = 448
      collectionReference = "Get_ALL_Monday_Accounts"
      iterationOrder = "Asc"
      nextValueConnector = {
        targetReference = "MA_Decision_Loop_Count_0_0_0"
      }
      noMoreValuesConnector = {
        targetReference = "Create_Handover_on_Company"
      }
    },
  ]
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "Flow"
  recordCreates = [
    {
      name = "Create_Handover_on_Company"
      label = "Create Handover on Company"
      locationX = 2064
      locationY = 431
      inputAssignments = [
        {
          field = "AM__c"
          value = {
            elementReference = "Account_Manager.recordId"
          }
        },
        {
          field = "CSM__c"
          value = {
            elementReference = "First_Current_Monday_Account.CSM__c"
          }
        },
        {
          field = "Company__c"
          value = {
            elementReference = "Which_Company.recordId"
          }
        },
        {
          field = "Example_of_Projects__c"
          value = {
            elementReference = "Examples_of_Projects1"
          }
        },
        {
          field = "Handover_Notes__c"
          value = {
            elementReference = "Notes_to_AM_0"
          }
        },
        {
          field = "Long_Term_Growth_AE__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "Passed_from_Account__c"
          value = {
            booleanValue = true
          }
        },
        {
          field = "Retention_Score_AE__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth_AE__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
        {
          field = "Types_of_Projects__c"
          value = {
            elementReference = "Types_of_Projects1"
          }
        },
      ]
      object = salesforce.Handover__c
    },
  ]
  recordLookups = [
    {
      name = "First_Current_Monday_Account"
      label = "First Current Monday Account"
      locationX = 445
      locationY = 475
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Get_ALL_Monday_Accounts"
      }
      faultConnector = {
        targetReference = "Error_Screen"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Flow.CurrentRecord"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Account
      storeOutputAutomatically = true
    },
    {
      name = "First_Current_Monday_Account_0"
      label = "First Current Monday Account"
      locationX = 509
      locationY = 371
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Which_Accounts_to_hand_over_0"
      }
      faultConnector = {
        targetReference = "Error_Screen"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Flow.CurrentRecord"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Account
      storeOutputAutomatically = true
    },
    {
      name = "Get_ALL_Monday_Accounts"
      label = "Get ALL Monday Account"
      locationX = 592
      locationY = 476
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Count_accounts"
      }
      faultConnector = {
        targetReference = "Error_Screen"
      }
      filters = [
        {
          field = "ParentId"
          operator = "EqualTo"
          value = {
            elementReference = "First_Current_Monday_Account.ParentId"
          }
        },
        {
          field = "RecordTypeId"
          operator = "EqualTo"
          value = {
            stringValue = "0121t000000IQTnAAO"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Account
      storeOutputAutomatically = true
    },
    {
      name = "Get_AM_Details"
      label = "Get AM Details"
      locationX = 1439
      locationY = 144
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Is_AM_0"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "Account_Manager_0.recordId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      storeOutputAutomatically = true
    },
    {
      name = "Get_AM_Details_0"
      label = "Get AM Details"
      locationX = 1440
      locationY = 252
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Is_AM_0_0_0"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "Account_Manager.recordId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.User
      storeOutputAutomatically = true
    },
  ]
  recordUpdates = [
    {
      name = "UpdateAccountDetails_0"
      label = "UpdateAccountDetails"
      locationX = 1992
      locationY = 144
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Flow.CurrentRecord"
          }
        },
        {
          field = "RecordTypeId"
          operator = "EqualTo"
          value = {
            stringValue = "0121t000000IQTnAAO"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Account_Potential_Seats__c"
          value = {
            elementReference = "Max_Company_Seats_Potential"
          }
        },
        {
          field = "Last_Ownership_Update__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Long_Term_Growth_AE__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "OwnerId"
          value = {
            elementReference = "Account_Manager_0.recordId"
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            elementReference = "Get_AM_Details_0.ManagerId"
          }
        },
        {
          field = "PreviousOwner__c"
          value = {
            elementReference = "UserId"
          }
        },
        {
          field = "Retention_Score_AE__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth_AE__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
      ]
      object = salesforce.Account
    },
    {
      name = "UpdateAccountDetails_0_0"
      label = "UpdateAccountDetails"
      locationX = 1989
      locationY = 651
      connector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "Loop_over_monday_accounts_0.Id"
          }
        },
        {
          field = "OwnerId"
          operator = "EqualTo"
          value = {
            elementReference = "UserId"
          }
        },
        {
          field = "RecordTypeId"
          operator = "EqualTo"
          value = {
            stringValue = "0121t000000IQTnAAO"
          }
        },
      ]
      inputAssignments = [
        {
          field = "Account_Potential_Seats__c"
          value = {
            elementReference = "Max_Company_Seats_Potential"
          }
        },
        {
          field = "Last_Handover_Timestamp__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Last_Ownership_Update__c"
          value = {
            elementReference = "$Flow.CurrentDateTime"
          }
        },
        {
          field = "Long_Term_Growth_AE__c"
          value = {
            elementReference = "Potential_Long_Term"
          }
        },
        {
          field = "OwnerId"
          value = {
            elementReference = "Account_Manager_0.recordId"
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            elementReference = "Get_AM_Details_0.ManagerId"
          }
        },
        {
          field = "PreviousOwner__c"
          value = {
            elementReference = "UserId"
          }
        },
        {
          field = "Retention_Score_AE__c"
          value = {
            elementReference = "Retention_Potential"
          }
        },
        {
          field = "Short_Term_Growth_AE__c"
          value = {
            elementReference = "PotentialShortTerm"
          }
        },
      ]
      object = salesforce.Account
    },
  ]
  screens = [
    {
      name = "Account_Handover"
      label = "Account Handover"
      locationX = 179
      locationY = 307
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Which_Accounts_to_hand_over"
      }
      fields = [
        {
          name = "IntroMessage"
          fieldText = "<p>Hey {!UserFirstName},</p><p>You're about to begin the account handover process.</p><p><br></p><p>First - would you like the to transfer this monday account only, or all monday accounts from this company that are owned by you?</p>"
          fieldType = "DisplayText"
        },
        {
          name = "This_monday_account_only"
          dataType = "Boolean"
          fieldText = "This monday account only"
          fieldType = "InputField"
          helpText = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">This option will transfer all of the monday accounts from the monday account's parent company that are owned by {!UserFirstName}</span></p>"
          isRequired = true
          validationRule = {
            errorMessage = "<p>Please choose only one of the options</p>"
            formulaExpression = '''
(({!All_of_my_monday_accounts_from_this_company} = True) && ({!This_monday_account_only} = False)) ||
(({!All_of_my_monday_accounts_from_this_company} = False) && ({!This_monday_account_only} = True))
'''
          }
        },
        {
          name = "All_of_my_monday_accounts_from_this_company"
          dataType = "Boolean"
          fieldText = "All of my monday accounts from this company"
          fieldType = "InputField"
          helpText = "<p>This option will transfer all of the monday accounts from the monday account's parent company that are owned by {!UserFirstName}</p>"
          isRequired = true
          validationRule = {
            errorMessage = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">Please choose only one of the options</span></p>"
            formulaExpression = '''
(({!All_of_my_monday_accounts_from_this_company} = True) && ({!This_monday_account_only} = False)) ||
(({!All_of_my_monday_accounts_from_this_company} = False) && ({!This_monday_account_only} = True))
'''
          }
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Account_Summary"
      label = "Account Summary"
      locationX = 1796
      locationY = 143
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "UpdateAccountDetails_0"
      }
      fields = [
        {
          name = "FinalStageText"
          fieldText = "<p>From your knowledge of {!First_Current_Monday_Account.Parent.Name}, please provide the following information:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Short_Term_Growth_Potential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Short Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "PotentialShortTerm"
              name = "value"
            },
          ]
        },
        {
          name = "Long_Term_Growth_Potential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Long Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Potential_Long_Term"
              name = "value"
            },
          ]
        },
        {
          name = "retentionpotential"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Retention Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Retention_Potential"
              name = "value"
            },
          ]
        },
        {
          name = "Max_Company_Seats_Potential"
          dataType = "Number"
          fieldText = "Max. Company Seats Potential"
          fieldType = "InputField"
          helpText = "<p>From your knowledge of {!First_Current_Monday_Account.Parent.Name}</p>"
          isRequired = true
          scale = 0
        },
        {
          name = "NotesTitle"
          fieldText = "<p>What should the AM know about this account?</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Types_of_Projects"
          fieldText = "Types of Projects"
          fieldType = "LargeTextArea"
          isRequired = false
        },
        {
          name = "Examples_of_Projects"
          fieldText = "Examples of Projects"
          fieldType = "LargeTextArea"
          isRequired = false
        },
        {
          name = "Notes_to_AM"
          fieldText = "Notes to AM"
          fieldType = "LargeTextArea"
          isRequired = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Account_Summary_0"
      label = "Account Summary"
      locationX = 1797
      locationY = 284
      allowBack = true
      allowFinish = true
      allowPause = true
      connector = {
        targetReference = "Loop_over_monday_accounts_0"
      }
      fields = [
        {
          name = "FinalStageText_0"
          fieldText = "<p>From your knowledge of {!First_Current_Monday_Account.Parent.Name}, please provide the following information:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Short_Term_Growth_Potential_0"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Short Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "PotentialShortTerm"
              name = "value"
            },
          ]
        },
        {
          name = "Long_Term_Growth_Potential_0"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Long Term Growth Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Potential_Long_Term"
              name = "value"
            },
          ]
        },
        {
          name = "retentionpotential_0"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Retention Potential (Company)"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 10
              }
            },
          ]
          isRequired = true
          outputParameters = [
            {
              assignToReference = "Retention_Potential"
              name = "value"
            },
          ]
        },
        {
          name = "Max_Company_Seats_Potential_0"
          dataType = "Number"
          fieldText = "Max. Company Seats Potential"
          fieldType = "InputField"
          helpText = "<p>From your knowledge of {!First_Current_Monday_Account.Parent.Name}</p>"
          isRequired = true
          scale = 0
        },
        {
          name = "NotesTitle_0"
          fieldText = "<p>What should the AM know about this account?</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Types_of_Projects1"
          fieldText = "Types of Projects"
          fieldType = "LargeTextArea"
          isRequired = false
        },
        {
          name = "Examples_of_Projects1"
          fieldText = "Examples of Projects"
          fieldType = "LargeTextArea"
          isRequired = false
        },
        {
          name = "Notes_to_AM_0"
          fieldText = "Notes to AM"
          fieldType = "LargeTextArea"
          isRequired = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "DoNothingScreen"
      label = "No Choice"
      locationX = 173
      locationY = 611
      allowBack = true
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "NoChoiceMessage"
          fieldText = "<p>You haven't selected anything, or there are no monday accounts owned by you from this company.</p><p>To go back and and choose again, click on 'Previous'.</p><p>To exit without doing anything, click on 'Finish'.</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Error_Screen"
      label = "Error Screen"
      locationX = 524
      locationY = 72
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "ErrorText"
          fieldText = "<p><b><u>Something went wrong.</u></b></p><p>In case you've filled in some data, it will be sent together with the error to the admin.</p><p><br></p><p>Please also send this entire error message to the biz-ops team:</p><p><span style=\"color: rgb(160, 28, 28);\">{!$Flow.FaultMessage}</span></p><p><br></p><p>Record ID: </p><p><span style=\"color: rgb(160, 28, 28);\">{!$Flow.CurrentRecord}</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Monday_Account_Handover"
      label = "Monday Account Handover"
      locationX = 1223
      locationY = 260
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Get_AM_Details_0"
      }
      fields = [
        {
          name = "Which_Company"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "fieldApiName"
              value = {
                stringValue = "Company__c"
              }
            },
            {
              name = "label"
              value = {
                stringValue = "Company Name"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "recordId"
              value = {
                elementReference = "First_Current_Monday_Account.ParentId"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "AllAccounts"
          fieldText = "<p>You've chosen to handover all of your accounts.</p><p>Here's a summary of the {!First_Current_Monday_Account.Parent.Name} monday accounts:</p><p><br></p><p>Total monday accounts: {!MAsCount}</p><p>Total paying monday accounts: {!PayingAccountsCount}</p><p>{!UserFirstName}'s monday accounts (all): {!OwnerIsUserCount}</p><p>{!UserFirstName}'s paying accounts: {!Owner_Paying_MAs}</p><p><br></p><p>Total accounts that will be handed over: <span style=\"color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);\">{!OwnerIsUserCount}</span></p><p><br></p><p><b style=\"color: rgb(62, 62, 60); background-color: rgb(255, 255, 255);\"><u>﻿Account Manager</u></b></p><p>Please choose an account manager to handover the accounts to:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Account_Manager"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Account Manager"
              }
            },
            {
              name = "fieldApiName"
              value = {
                stringValue = "CreatedById"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Note2"
          fieldText = "<p>*Picking 'Accounts Pool' will un-assign yourself from all of the accounts that you own in {!First_Current_Monday_Account.Parent.Name} </p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Monday_Account_Handover_Single"
      label = "Monday Account Handover"
      locationX = 1223
      locationY = 136
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Get_AM_Details"
      }
      fields = [
        {
          name = "Which_Company_0"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "fieldApiName"
              value = {
                stringValue = "Company__c"
              }
            },
            {
              name = "label"
              value = {
                stringValue = "Company Name"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "recordId"
              value = {
                elementReference = "First_Current_Monday_Account.ParentId"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "AllAccounts_0"
          fieldText = "<p>You've chosen to handover {!First_Current_Monday_Account.Name} only.</p><p><br></p><p>Here's a summary of the {!First_Current_Monday_Account.Parent.Name} monday accounts:</p><p><br></p><p>Total monday accounts: {!MAsCount}</p><p>Total paying monday accounts: {!PayingAccountsCount}</p><p>{!UserFirstName}'s monday accounts (all): {!OwnerIsUserCount}</p><p>{!UserFirstName}'s paying accounts: {!Owner_Paying_MAs}</p><p><br></p><p><b><u>Account Manager</u></b></p><p>Please choose an account manager to handover the account to:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Account_Manager_0"
          extensionName = "flowruntime:lookup"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Account Manager"
              }
            },
            {
              name = "fieldApiName"
              value = {
                stringValue = "CreatedById"
              }
            },
            {
              name = "objectApiName"
              value = {
                stringValue = "Account"
              }
            },
            {
              name = "required"
              value = {
                booleanValue = true
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Note1"
          fieldText = "<p><span style=\"font-size: 12px;\">*Picking 'Accounts Pool' will un-assign yourself from this account</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Please_choose_an_account_manager"
      label = "Please choose an account manager"
      locationX = 1443
      locationY = 15
      allowBack = true
      allowFinish = false
      allowPause = false
      connector = {
        targetReference = "Monday_Account_Handover_Single"
      }
      fields = [
        {
          name = "MustBeAM"
          fieldText = "<p>Please choose an account manager.</p><p>{!Get_AM_Details_0.Name}'s function is <span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">{!Get_AM_Details_0.Function__c}.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Please_choose_an_account_manager_0"
      label = "Please choose an account manager"
      locationX = 1447
      locationY = 379
      allowBack = true
      allowFinish = false
      allowPause = false
      connector = {
        targetReference = "Monday_Account_Handover"
      }
      fields = [
        {
          name = "MustBeAM_0"
          fieldText = "<p>Please choose an account manager.</p><p>{!Get_AM_Details_0.Name}'s function is <span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">{!Get_AM_Details_0.Function__c}.</span></p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
  ]
  stages = [
    {
      name = "Account_Summary_Notes"
      isActive = true
      label = "Account Summary"
      stageOrder = 15
    },
    {
      name = "Choose_Accounts"
      isActive = true
      label = "Choose Accounts"
      stageOrder = 5
    },
    {
      name = "Choose_AM"
      isActive = true
      label = "Choose AM"
      stageOrder = 10
    },
  ]
  start = {
    locationX = 51
    locationY = 51
    connector = {
      targetReference = "SetRecordID"
    }
  }
  status = "Draft"
  variables = [
    {
      name = "CompanyID"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "MAsCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "Owner_Paying_MAs"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "OwnerIsUserCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "PayingAccounts"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "PayingAccountsCount"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "Potential_Long_Term"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "PotentialShortTerm"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
    {
      name = "recordId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "Retention_Potential"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = true
      scale = 0
    },
  ]
}
