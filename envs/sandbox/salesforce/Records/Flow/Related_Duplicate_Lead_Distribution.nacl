salesforce.Flow Related_Duplicate_Lead_Distribution {
  fullName = "Related_Duplicate_Lead_Distribution"
  actionCalls = [
    {
      name = "Didnt_find_Local_Company"
      label = "Didnt find Local Company"
      locationX = 248
      locationY = 890
      actionName = "emailSimple"
      actionType = "emailSimple"
      connector = {
        targetReference = "Regional_Company_Owner_Validation"
      }
      faultConnector = {
        targetReference = "Regional_Company_Owner_Validation"
      }
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "DidntFindLocalCompanyText"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Didn't Find Local Company"
          }
        },
      ]
    },
    {
      name = "Found_Regional_Company"
      label = "Found Regional Company"
      locationX = 14
      locationY = 697
      actionName = "emailSimple"
      actionType = "emailSimple"
      connector = {
        targetReference = "Get_Local_Company"
      }
      faultConnector = {
        targetReference = "Get_Local_Company"
      }
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "FoundRegionalCompanyBody"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Found Regional Company"
          }
        },
      ]
    },
    {
      name = "Found_Regional_Company_0"
      label = "Found Regional Company"
      locationX = 249
      locationY = 1092
      actionName = "emailSimple"
      actionType = "emailSimple"
      connector = {
        targetReference = "Local_Company_Owner_Validation"
      }
      faultConnector = {
        targetReference = "Do_Nothing"
      }
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "FoundLocalCompanyText"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Found Local Company"
          }
        },
      ]
    },
    {
      name = "Found_Regional_Company_0_0_0"
      label = "Found Regional Company"
      locationX = 236
      locationY = 717
      actionName = "emailSimple"
      actionType = "emailSimple"
      connector = {
        targetReference = "Do_Nothing"
      }
      faultConnector = {
        targetReference = "Do_Nothing"
      }
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "WentToOther"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Went to other after regional company owner check"
          }
        },
      ]
    },
    {
      name = "FoundLeadEmail"
      label = "FoundLeadEmail"
      locationX = 360
      locationY = 298
      actionName = "emailSimple"
      actionType = "emailSimple"
      connector = {
        targetReference = "Get_Regional_Company"
      }
      faultConnector = {
        targetReference = "Do_Nothing"
      }
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "FoundLeadEmailBody"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Found lead"
          }
        },
      ]
    },
    {
      name = "Ready_to_update_lead"
      label = "Ready to update lead"
      locationX = 938
      locationY = 903
      actionName = "emailSimple"
      actionType = "emailSimple"
      connector = {
        targetReference = "Update_Lead"
      }
      faultConnector = {
        targetReference = "Update_Lead"
      }
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "ReadyToUpdate"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Ready to update lead"
          }
        },
      ]
    },
    {
      name = "Updated_Successfully"
      label = "Updated Successfully"
      locationX = 1183
      locationY = 909
      actionName = "emailSimple"
      actionType = "emailSimple"
      inputParameters = [
        {
          name = "emailBody"
          value = {
            elementReference = "SuccessfullyUpdatedLeadOwner"
          }
        },
        {
          name = "emailAddresses"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "senderAddress"
          value = {
            stringValue = "galom@monday.com"
          }
        },
        {
          name = "emailSubject"
          value = {
            stringValue = "Successfully Changed Owner"
          }
        },
      ]
    },
  ]
  assignments = [
    {
      name = "Do_Nothing"
      label = "Do Nothing"
      locationX = 359
      locationY = 613
      assignmentItems = [
        {
          assignToReference = "Nothing"
          operator = "Assign"
          value = {
            numberValue = 1
          }
        },
      ]
    },
    {
      name = "Local_Lead_Receiver_as_Owner"
      label = "Local Lead Receiver as Owner"
      locationX = 815
      locationY = 950
      assignmentItems = [
        {
          assignToReference = "NewOwnerId"
          operator = "Assign"
          value = {
            elementReference = "LocalCompany.Strategic_receiver__c"
          }
        },
        {
          assignToReference = "NewOwnerManagerId"
          operator = "Assign"
          value = {
            elementReference = "LocalCompany.Strategic_receiver__r.ManagerId"
          }
        },
      ]
      connector = {
        targetReference = "Ready_to_update_lead"
      }
    },
    {
      name = "Local_Owner_as_Owner"
      label = "Local Owner as Owner"
      locationX = 809
      locationY = 1139
      assignmentItems = [
        {
          assignToReference = "NewOwnerId"
          operator = "Assign"
          value = {
            elementReference = "LocalCompany.OwnerId"
          }
        },
        {
          assignToReference = "NewOwnerManagerId"
          operator = "Assign"
          value = {
            elementReference = "LocalCompany.Owner_s_Manager__c"
          }
        },
      ]
      connector = {
        targetReference = "Ready_to_update_lead"
      }
    },
    {
      name = "Regional_Lead_Receiver_as_Owner"
      label = "Regional Lead Receiver as Owner"
      locationX = 810
      locationY = 807
      assignmentItems = [
        {
          assignToReference = "NewOwnerId"
          operator = "Assign"
          value = {
            elementReference = "RegionalCompany.Strategic_receiver__c"
          }
        },
        {
          assignToReference = "NewOwnerManagerId"
          operator = "Assign"
          value = {
            elementReference = "RegionalCompany.Strategic_receiver__r.ManagerId"
          }
        },
      ]
      connector = {
        targetReference = "Ready_to_update_lead"
      }
    },
    {
      name = "Regional_Owner_as_Owner"
      label = "Regional Owner as Owner"
      locationX = 809
      locationY = 672
      assignmentItems = [
        {
          assignToReference = "NewOwnerId"
          operator = "Assign"
          value = {
            elementReference = "RegionalCompany.OwnerId"
          }
        },
        {
          assignToReference = "NewOwnerManagerId"
          operator = "Assign"
          value = {
            elementReference = "RegionalCompany.Owner_s_Manager__r.Id"
          }
        },
      ]
      connector = {
        targetReference = "Ready_to_update_lead"
      }
    },
  ]
  decisions = [
    {
      name = "Found_Local_Records"
      label = "Found Local Records"
      locationX = 109
      locationY = 994
      defaultConnector = {
        targetReference = "Found_Regional_Company_0"
      }
      defaultConnectorLabel = "Found records"
      rules = [
        {
          name = "Didn_t_find_local_records"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "LocalCompany"
              operator = "IsNull"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Didnt_find_Local_Company"
          }
          label = "Didn't find records"
        },
      ]
    },
    {
      name = "Found_Regional_Records"
      label = "Found Regional Records?"
      locationX = 6
      locationY = 534
      defaultConnector = {
        targetReference = "Found_Regional_Company"
      }
      defaultConnectorLabel = "Found records"
      rules = [
        {
          name = "Didn_t_find_records"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "RegionalCompany"
              operator = "IsNull"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Found_Regional_Company_0_0_0"
          }
          label = "Didn't find records"
        },
      ]
    },
    {
      name = "Local_Company_Has_Lead_Receiver"
      label = "Local Company Has Lead Receiver"
      locationX = 503
      locationY = 962
      defaultConnector = {
        targetReference = "Local_Owner_as_Owner"
      }
      defaultConnectorLabel = "No Lead Receiver"
      rules = [
        {
          name = "Has_Lead_Receiver"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "LocalCompany.Strategic_receiver__c"
              operator = "StartsWith"
              rightValue = {
                stringValue = "005"
              }
            },
          ]
          connector = {
            targetReference = "Regional_Lead_Receiver_is_Active_0"
          }
          label = "Has Lead Receiver"
        },
      ]
    },
    {
      name = "Local_Company_Owner_Validation"
      label = "Local Company Owner Validation"
      locationX = 361
      locationY = 1095
      defaultConnector = {
        targetReference = "Regional_Company_Owner_Validation"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Owner_is_Active_and_AM_AE_Manager"
          conditionLogic = "1 AND 2"
          conditions = [
            {
              leftValueReference = "LocalCompany.Owner_is_Active_reports__c"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "LocalCompany.Owner.Function_Ownership_Score__c"
              operator = "GreaterThanOrEqualTo"
              rightValue = {
                numberValue = 4
              }
            },
          ]
          connector = {
            targetReference = "Local_Company_Has_Lead_Receiver"
          }
          label = "Owner is Active and AM/AE/Manager"
        },
      ]
    },
    {
      name = "Regional_Company_Has_Lead_Receiver"
      label = "Regional Company Has Lead Receiver"
      locationX = 504
      locationY = 809
      defaultConnector = {
        targetReference = "Regional_Owner_as_Owner"
      }
      defaultConnectorLabel = "No Lead Receiver"
      rules = [
        {
          name = "Has_Regional_Lead_Receiver"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "RegionalCompany.Strategic_receiver__c"
              operator = "StartsWith"
              rightValue = {
                stringValue = "005"
              }
            },
          ]
          connector = {
            targetReference = "Regional_Lead_Receiver_is_Active"
          }
          label = "Has Regional Lead Receiver"
        },
      ]
    },
    {
      name = "Regional_Company_Owner_Validation"
      label = "Regional Company Owner Validation"
      locationX = 354
      locationY = 812
      defaultConnector = {
        targetReference = "Found_Regional_Company_0_0_0"
      }
      defaultConnectorLabel = "Other"
      rules = [
        {
          name = "Owner_is_Active_and_AM_AE_Manager_0"
          conditionLogic = "1 AND (2 or 3 or 4 or 5 or 6)"
          conditions = [
            {
              leftValueReference = "RegionalCompany.Owner_is_Active_reports__c"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "RegionalCompany.Owner.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AM"
              }
            },
            {
              leftValueReference = "RegionalCompany.Owner.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Enterprise AE"
              }
            },
            {
              leftValueReference = "RegionalCompany.Owner.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AM"
              }
            },
            {
              leftValueReference = "RegionalCompany.Owner.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Mid-Market AE"
              }
            },
            {
              leftValueReference = "RegionalCompany.Owner.Function__c"
              operator = "EqualTo"
              rightValue = {
                stringValue = "Manager"
              }
            },
          ]
          connector = {
            targetReference = "Regional_Company_Has_Lead_Receiver"
          }
          label = "Owner is Active and AM/AE/Manager"
        },
      ]
    },
    {
      name = "Regional_Lead_Receiver_is_Active"
      label = "Regional Lead Receiver is Active"
      locationX = 649
      locationY = 743
      defaultConnector = {
        targetReference = "Regional_Owner_as_Owner"
      }
      defaultConnectorLabel = "No Lead Receiver"
      rules = [
        {
          name = "Lead_Receiver_is_Active"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "RegionalCompany.Strategic_receiver__r.IsActive"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Regional_Lead_Receiver_as_Owner"
          }
          label = "Lead Receiver is Active"
        },
      ]
    },
    {
      name = "Regional_Lead_Receiver_is_Active_0"
      label = "Regional Lead Receiver is Active"
      locationX = 664
      locationY = 1035
      defaultConnector = {
        targetReference = "Local_Owner_as_Owner"
      }
      defaultConnectorLabel = "No Lead Receiver"
      rules = [
        {
          name = "Local_Lead_Receiver_is_Active"
          conditionLogic = "or"
          conditions = [
            {
              leftValueReference = "LocalCompany.Strategic_receiver__r.IsActive"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
          ]
          connector = {
            targetReference = "Local_Lead_Receiver_as_Owner"
          }
          label = "Lead Receiver is Active"
        },
      ]
    },
  ]
  description = "This is a fix in SF to route the related/duplicate leads to regional/local owners of the same company in different territories, based on the company ownership."
  interviewLabel = "Related/Duplicate Lead Distribution {!$Flow.CurrentDateTime}"
  label = "Related/Duplicate Lead Distribution"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "CanvasMode"
      value = {
        stringValue = "FREE_FORM_CANVAS"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "AutoLaunchedFlow"
  recordLookups = [
    {
      name = "Get_Local_Company"
      label = "Get Local Company from Lead Country"
      locationX = 3
      locationY = 893
      assignNullValuesIfNoRecordsFound = true
      connector = {
        targetReference = "Found_Local_Records"
      }
      faultConnector = {
        targetReference = "Found_Local_Records"
      }
      filters = [
        {
          field = "Account_Territory__c"
          operator = "EqualTo"
          value = {
            stringValue = "Local"
          }
        },
        {
          field = "ParentId"
          operator = "EqualTo"
          value = {
            elementReference = "RegionalCompany.Id"
          }
        },
        {
          field = "BillingCountryCode"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.CountryCode"
          }
        },
        {
          field = "BillingCountry"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Country"
          }
        },
        {
          field = "ParentId"
          operator = "EqualTo"
          value = {
            elementReference = "RegionalCompany.Long_Account_ID__c"
          }
        },
      ]
      object = salesforce.Account
      outputReference = "LocalCompany"
      queriedFields = [
        salesforce.Account.field.Id,
        salesforce.Account.field.OwnerId,
        salesforce.Account.field.Owner_s_Manager__c,
        salesforce.Account.field.Strategic_receiver__c,
        salesforce.Account.field.Company__c,
        salesforce.Account.field.ParentId,
        salesforce.Account.field.Owner_is_Active_reports__c,
        salesforce.Account.field.Name,
        salesforce.Account.field.Account_Territory__c,
        salesforce.Account.field.Region__c,
        "BillingCountryCode",
        salesforce.Account.field.Long_Account_ID__c,
        "BillingCountry",
      ]
    },
    {
      name = "Get_Regional_Company"
      label = "Get Regional Company From Lead Territory"
      locationX = 138
      locationY = 299
      assignNullValuesIfNoRecordsFound = true
      connector = {
        targetReference = "Found_Regional_Records"
      }
      faultConnector = {
        targetReference = "Found_Regional_Records"
      }
      filters = [
        {
          field = "Account_Territory__c"
          operator = "EqualTo"
          value = {
            stringValue = "Regional"
          }
        },
        {
          field = "ParentId"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Related_Company__r.Id"
          }
        },
        {
          field = "Region__c"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Region__c"
          }
        },
      ]
      object = salesforce.Account
      outputReference = "RegionalCompany"
      queriedFields = [
        salesforce.Account.field.Id,
        salesforce.Account.field.Company__c,
        salesforce.Account.field.ParentId,
        salesforce.Account.field.OwnerId,
        salesforce.Account.field.Owner_s_Manager__c,
        salesforce.Account.field.Owner_is_Active_reports__c,
        salesforce.Account.field.Strategic_receiver__c,
        salesforce.Account.field.Name,
        salesforce.Account.field.Long_Account_ID__c,
        "BillingCountryCode",
      ]
      sortField = salesforce.Account.field.Name
      sortOrder = "Desc"
    },
  ]
  recordUpdates = [
    {
      name = "Update_Lead"
      label = "Update Lead"
      locationX = 1040
      locationY = 908
      connector = {
        targetReference = "Updated_Successfully"
      }
      faultConnector = {
        targetReference = "Do_Nothing"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.Id"
          }
        },
      ]
      inputAssignments = [
        {
          field = "OwnerId"
          value = {
            elementReference = "NewOwnerId"
          }
        },
        {
          field = "Owner_s_Manager__c"
          value = {
            elementReference = "NewOwnerManagerId"
          }
        },
      ]
      object = salesforce.Lead
    },
  ]
  start = {
    locationX = 5
    locationY = 50
    connector = {
      targetReference = "FoundLeadEmail"
    }
    filters = [
      {
        field = "Distribution_reason__c"
        operator = "EqualTo"
        value = {
          stringValue = "Related"
        }
      },
      {
        field = "Distribution_reason__c"
        operator = "EqualTo"
        value = {
          stringValue = "Strategic"
        }
      },
    ]
    object = salesforce.Lead
    triggerType = "RecordAfterSave"
  }
  status = "Active"
  textTemplates = [
    {
      name = "DidntFindLocalCompanyText"
      text = "<p>Didn't find local company</p><p>Record Country: {!$Record.Country}</p><p><br></p>"
    },
    {
      name = "FoundLeadEmailBody"
      text = '''
Found Lead:
{!$Record.FirstName} {!$Record.LastName}
{!$Record.Company}
{!$Record.Email}
{!$Flow.CurrentStage} - {!$Flow.FaultMessage}
'''
    },
    {
      name = "FoundLocalCompanyText"
      text = "<p>Found Local Company</p><p>{!LocalCompany.Name}</p><p><br></p><p>Error:</p><p>{!$Flow.FaultMessage}</p>"
    },
    {
      name = "FoundRegionalCompanyBody"
      text = "<p>Found Regional Company</p><p>{!RegionalCompany.Name}</p><p><br></p><p>{!$Flow.FaultMessage}</p>"
    },
    {
      name = "ReadyToUpdate"
      text = "<p>Ready to update lead</p>"
    },
    {
      name = "SuccessfullyUpdatedLeadOwner"
      text = "<p>Successfully updated lead with new owner!</p><p><br></p><p>In case of error, error message:</p><p>{!$Flow.FaultMessage}</p>"
    },
    {
      name = "WentToOther"
      text = "<p>Went to 'other' after checking regional company owner.</p><p>Either inactive, or not AM/AE/Manager.</p><p><br></p><p>{!$Flow.FaultMessage}</p>"
    },
  ]
  variables = [
    {
      name = "LocalCompany"
      dataType = "SObject"
      isCollection = false
      isInput = true
      isOutput = true
      objectType = salesforce.Account
    },
    {
      name = "NewOwnerId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "NewOwnerManagerId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "Nothing"
      dataType = "Number"
      isCollection = false
      isInput = true
      isOutput = false
      scale = 0
      value = {
        numberValue = 0
      }
    },
    {
      name = "OurLead"
      dataType = "SObject"
      isCollection = false
      isInput = true
      isOutput = true
      objectType = salesforce.Lead
    },
    {
      name = "RegionalCompany"
      dataType = "SObject"
      isCollection = false
      isInput = true
      isOutput = true
      objectType = salesforce.Account
    },
  ]
}
