salesforce.Flow Opportunity_on_Creation_Before {
  fullName = "Opportunity_on_Creation_Before"
  assignments = [
    {
      name = "Set_Claimed_ARR_on_Opp"
      label = "Set Claimed ARR on Opp"
      locationX = 50
      locationY = 493
      assignmentItems = [
        {
          assignToReference = "$Record.Monday_Account_ARR__c"
          operator = "Assign"
          value = {
            elementReference = "Get_Account_Data.Account_Claimed_ARR__c"
          }
        },
      ]
    },
  ]
  decisions = [
    {
      name = "Account_Has_Claimed_ARR"
      label = "Account Has Claimed ARR"
      locationX = 182
      locationY = 373
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Has_Claimed"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "Get_Account_Data.Account_Claimed_ARR__c"
              operator = "IsNull"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "Set_Claimed_ARR_on_Opp"
          }
          label = "Has Claimed"
        },
      ]
    },
  ]
  interviewLabel = "Opportunity on Creation - Before {!$Flow.CurrentDateTime}"
  label = "Opportunity on Creation - Before"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "CanvasMode"
      value = {
        stringValue = "AUTO_LAYOUT_CANVAS"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "AutoLaunchedFlow"
  recordLookups = [
    {
      name = "Get_Account_Data"
      label = "Get Account Data"
      locationX = 182
      locationY = 253
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Account_Has_Claimed_ARR"
      }
      filters = [
        {
          field = "Id"
          operator = "EqualTo"
          value = {
            elementReference = "$Record.AccountId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Account
      queriedFields = [
        salesforce.Account.field.Id,
        salesforce.Account.field.Account_Claimed_ARR__c,
      ]
      storeOutputAutomatically = true
    },
  ]
  start = {
    locationX = 56
    locationY = 0
    connector = {
      targetReference = "Get_Account_Data"
    }
    object = salesforce.Opportunity
    triggerType = "RecordBeforeSave"
  }
  status = "Active"
}
