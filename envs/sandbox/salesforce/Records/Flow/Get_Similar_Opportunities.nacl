salesforce.Flow Get_Similar_Opportunities {
  fullName = "Get_Similar_Opportunities"
  assignments = [
    {
      name = "SetAllFieldsSimilarRecords"
      label = "SetAllFieldsSimilarRecords"
      locationX = 1064
      locationY = 596
      assignmentItems = [
        {
          assignToReference = "SimilarOpportunitiesCollection"
          operator = "Assign"
          value = {
            elementReference = "GetAllSimilarOpps"
          }
        },
      ]
      connector = {
        targetReference = "Similar_Opportunities"
      }
    },
    {
      name = "SetCollectionRecord"
      label = "SetCollectionRecord"
      locationX = 908
      locationY = 40
      assignmentItems = [
        {
          assignToReference = "SimilarOpportunitiesCollection"
          operator = "Assign"
          value = {
            elementReference = "GetIndustryOnlyRecords"
          }
        },
      ]
      connector = {
        targetReference = "Similar_Opportunities"
      }
    },
    {
      name = "SetCountryOnlyRecords"
      label = "SetCountryOnlyRecords"
      locationX = 909
      locationY = 335
      assignmentItems = [
        {
          assignToReference = "SimilarOpportunitiesCollection"
          operator = "Assign"
          value = {
            elementReference = "GetSameCountry"
          }
        },
      ]
      connector = {
        targetReference = "Similar_Opportunities"
      }
    },
    {
      name = "SetCountryOnlyRecords_0"
      label = "SetCountryOnlyRecords"
      locationX = 913
      locationY = 523
      assignmentItems = [
        {
          assignToReference = "SimilarOpportunitiesCollection"
          operator = "Assign"
          value = {
            elementReference = "GetSameCountryDepartment"
          }
        },
      ]
      connector = {
        targetReference = "Similar_Opportunities"
      }
    },
    {
      name = "SetDepCollectionRecord"
      label = "SetDepCollectionRecord"
      locationX = 903
      locationY = 167
      assignmentItems = [
        {
          assignToReference = "SimilarOpportunitiesCollection"
          operator = "Assign"
          value = {
            elementReference = "GetDepartmentsOnly"
          }
        },
      ]
      connector = {
        targetReference = "Similar_Opportunities"
      }
    },
  ]
  choices = [
    {
      name = "BlankChoice"
      choiceText = "None"
      dataType = "String"
      value = {
        stringValue = ""
      }
    },
  ]
  decisions = [
    {
      name = "Decision"
      label = "Decision"
      locationX = 343
      locationY = 336
      defaultConnector = {
        targetReference = "GetAllSimilarOpps"
      }
      defaultConnectorLabel = "Default Outcome"
      rules = [
        {
          name = "Industry_Only"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "SameIndustryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "SameCountryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
            {
              leftValueReference = "SameDepartmentsChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "GetIndustryOnlyRecords"
          }
          label = "Industry Only"
        },
        {
          name = "Departments_Only"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "SameDepartmentsChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "SameIndustryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
            {
              leftValueReference = "SameCountryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "GetDepartmentsOnly"
          }
          label = "Departments Only"
        },
        {
          name = "Country_Only"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "SameCountryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "SameDepartmentsChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
            {
              leftValueReference = "SameIndustryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = false
              }
            },
          ]
          connector = {
            targetReference = "GetSameCountry"
          }
          label = "Country Only"
        },
        {
          name = "Country_Department"
          conditionLogic = "and"
          conditions = [
            {
              leftValueReference = "SameCountryChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "SameDepartmentsChoice"
              operator = "EqualTo"
              rightValue = {
                booleanValue = true
              }
            },
            {
              leftValueReference = "DepartmentsPicklistChoices"
              operator = "EqualTo"
            },
            {
              leftValueReference = "IndustryContains"
              operator = "EqualTo"
            },
            {
              leftValueReference = "Why_Closed_Lost"
              operator = "EqualTo"
            },
          ]
          connector = {
            targetReference = "GetSameCountryDepartment"
          }
          label = "Country & Department"
        },
      ]
    },
  ]
  dynamicChoiceSets = [
    {
      name = "DepartmentsPicklistChoices"
      dataType = "Multipicklist"
      picklistField = salesforce.Opportunity.field.DepartmentFunction__c
      picklistObject = salesforce.Opportunity
    },
    {
      name = "WhyClosedLostReasons"
      dataType = "Picklist"
      picklistField = salesforce.Opportunity.field.Lost_Reason__c
      picklistObject = salesforce.Opportunity
    },
  ]
  interviewLabel = "Get Similar Opportunities {!$Flow.CurrentDateTime}"
  label = "Get Similar Opportunities"
  processMetadataValues = [
    {
      name = "BuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
    {
      name = "OriginBuilderType"
      value = {
        stringValue = "LightningFlowBuilder"
      }
    },
  ]
  processType = "Flow"
  recordLookups = [
    {
      name = "GetAllSimilarOpps"
      label = "GetAllSimilarOpps"
      locationX = 768
      locationY = 995
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "SetAllFieldsSimilarRecords"
      }
      faultConnector = {
        targetReference = "Something_went_wrong"
      }
      filters = [
        {
          field = "Country__c"
          operator = "EqualTo"
          value = {
            elementReference = "CountryContains"
          }
        },
        {
          field = "DepartmentFunction__c"
          operator = "EqualTo"
          value = {
            elementReference = "SameDepartmentsChoice"
          }
        },
        {
          field = "Industry__c"
          operator = "EqualTo"
          value = {
            elementReference = "IndustryContains"
          }
        },
        {
          field = "Lost_Reason__c"
          operator = "Contains"
          value = {
            elementReference = "Why_Closed_Lost"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Qualified"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Evaluation"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Opportunity
      storeOutputAutomatically = true
    },
    {
      name = "GetCurrentOpportunity"
      label = "GetCurrentOpportunity"
      locationX = 190
      locationY = 49
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "Pick_fields"
      }
      faultConnector = {
        targetReference = "Something_went_wrong"
      }
      filters = [
        {
          field = "Long_Opportunity_ID__c"
          operator = "EqualTo"
          value = {
            elementReference = "recordId"
          }
        },
      ]
      getFirstRecordOnly = true
      object = salesforce.Opportunity
      storeOutputAutomatically = true
    },
    {
      name = "GetDepartmentsOnly"
      label = "GetDepartmentsOnly"
      locationX = 756
      locationY = 168
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "SetDepCollectionRecord"
      }
      faultConnector = {
        targetReference = "Something_went_wrong"
      }
      filters = [
        {
          field = "ARR_For_Reports__c"
          operator = "GreaterThanOrEqualTo"
          value = {
            elementReference = "Minimum_ARR_Choice.value"
          }
        },
        {
          field = "DepartmentFunction__c"
          operator = "EqualTo"
          value = {
            elementReference = "GetCurrentOpportunity.DepartmentFunction__c"
          }
        },
        {
          field = "Lost_Reason__c"
          operator = "Contains"
          value = {
            elementReference = "Why_Closed_Lost"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Qualified"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Evaluation"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Opportunity
      storeOutputAutomatically = true
    },
    {
      name = "GetIndustryOnlyRecords"
      label = "GetIndustryOnlyRecords"
      locationX = 759
      locationY = 48
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "SetCollectionRecord"
      }
      faultConnector = {
        targetReference = "Something_went_wrong"
      }
      filters = [
        {
          field = "ARR_For_Reports__c"
          operator = "GreaterThanOrEqualTo"
          value = {
            elementReference = "Minimum_ARR_Choice.value"
          }
        },
        {
          field = "Industry__c"
          operator = "EqualTo"
          value = {
            elementReference = "GetCurrentOpportunity.Industry__c"
          }
        },
        {
          field = "Lost_Reason__c"
          operator = "Contains"
          value = {
            elementReference = "Why_Closed_Lost"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Qualified"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Evaluation"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Opportunity
      sortField = salesforce.Opportunity.field.ARR_For_Reports__c
      sortOrder = "Desc"
      storeOutputAutomatically = true
    },
    {
      name = "GetSameCountry"
      label = "GetSameCountry"
      locationX = 758
      locationY = 336
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "SetCountryOnlyRecords"
      }
      faultConnector = {
        targetReference = "Something_went_wrong"
      }
      filters = [
        {
          field = "ARR_For_Reports__c"
          operator = "GreaterThanOrEqualTo"
          value = {
            elementReference = "Minimum_ARR_Choice.value"
          }
        },
        {
          field = "Country__c"
          operator = "EqualTo"
          value = {
            elementReference = "GetCurrentOpportunity.Country__c"
          }
        },
        {
          field = "Lost_Reason__c"
          operator = "Contains"
          value = {
            elementReference = "Why_Closed_Lost"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Qualified"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Evaluation"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Opportunity
      storeOutputAutomatically = true
    },
    {
      name = "GetSameCountryDepartment"
      label = "GetSameCountryDepartment"
      locationX = 753
      locationY = 508
      assignNullValuesIfNoRecordsFound = false
      connector = {
        targetReference = "SetCountryOnlyRecords_0"
      }
      faultConnector = {
        targetReference = "Something_went_wrong"
      }
      filters = [
        {
          field = "ARR_For_Reports__c"
          operator = "GreaterThanOrEqualTo"
          value = {
            elementReference = "Minimum_ARR_Choice.value"
          }
        },
        {
          field = "Country__c"
          operator = "EqualTo"
          value = {
            elementReference = "GetCurrentOpportunity.Country__c"
          }
        },
        {
          field = "Lost_Reason__c"
          operator = "Contains"
          value = {
            elementReference = "Why_Closed_Lost"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Qualified"
          }
        },
        {
          field = "StageName"
          operator = "NotEqualTo"
          value = {
            stringValue = "Evaluation"
          }
        },
      ]
      getFirstRecordOnly = false
      object = salesforce.Opportunity
      storeOutputAutomatically = true
    },
  ]
  screens = [
    {
      name = "Pick_fields"
      label = "Pick fields"
      locationX = 350
      locationY = 40
      allowBack = false
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Decision"
      }
      fields = [
        {
          name = "ComparingFieldsInfo"
          fieldText = "<p>Please pick the fields that you want to compare:</p>"
          fieldType = "DisplayText"
        },
        {
          name = "Use_cases"
          dataType = "String"
          defaultValue = {
            elementReference = "GetCurrentOpportunity.Use_cases__c"
          }
          fieldText = "Use cases:"
          fieldType = "InputField"
          helpText = "<p>Looks for text within the 'Use Case' field in the opportunities, so keep it simple.</p><p>Texts like 'project management', 'HR', 'task management' would work better than longer, combined texts.</p>"
          isRequired = false
        },
        {
          name = "CountryContains"
          dataType = "String"
          defaultValue = {
            elementReference = "GetCurrentOpportunity.Country__c"
          }
          fieldText = "Country Contains:"
          fieldType = "InputField"
          isRequired = false
        },
        {
          name = "IndustryContains"
          dataType = "String"
          defaultValue = {
            elementReference = "GetCurrentOpportunity.Industry__c"
          }
          fieldText = "Industry Contains:"
          fieldType = "InputField"
          isRequired = false
        },
        {
          name = "DepartmentsFunctions"
          choiceReferences = [
            "DepartmentsPicklistChoices",
          ]
          dataType = "String"
          fieldText = "Departments/Functions contains:"
          fieldType = "MultiSelectPicklist"
          helpText = "<p>The current opportunity's departments are: {!GetCurrentOpportunity.DepartmentFunction__c}</p>"
          isRequired = false
        },
        {
          name = "SameCountryChoice"
          dataType = "Boolean"
          fieldText = "Same Country"
          fieldType = "InputField"
          helpText = "<p>Look for opportunities from {!GetCurrentOpportunity.Country__c}</p>"
          isRequired = true
        },
        {
          name = "SameIndustryChoice"
          dataType = "Boolean"
          fieldText = "Same Industry"
          fieldType = "InputField"
          helpText = "<p>Looks for opportunities with the same opportunity's industry: {!GetCurrentOpportunity.Industry__c}</p>"
          isRequired = true
        },
        {
          name = "SameDepartmentsChoice"
          dataType = "Boolean"
          fieldText = "Same Departments"
          fieldType = "InputField"
          helpText = "<p><span style=\"background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);\">Looks for opportunities with the same opportunity's industry: {!GetCurrentOpportunity.DepartmentFunction__c}</span></p>"
          isRequired = true
        },
        {
          name = "Why_Closed_Lost"
          choiceReferences = [
            "WhyClosedLostReasons",
            "BlankChoice",
          ]
          dataType = "String"
          fieldText = "Why Closed Lost"
          fieldType = "DropdownBox"
          isRequired = true
        },
        {
          name = "Minimum_ARR_Choice"
          extensionName = "flowruntime:slider"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "label"
              value = {
                stringValue = "Minimum ARR"
              }
            },
            {
              name = "max"
              value = {
                numberValue = 100000
              }
            },
            {
              name = "size"
              value = {
                stringValue = "medium"
              }
            },
            {
              name = "step"
              value = {
                numberValue = 1000
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Similar_Opportunities"
      label = "Similar Opportunities"
      locationX = 1298
      locationY = 28
      allowBack = true
      allowFinish = true
      allowPause = false
      connector = {
        targetReference = "Pick_fields"
      }
      fields = [
        {
          name = "SimilarOppsTable"
          extensionName = "c:datatableFSC"
          fieldType = "ComponentInstance"
          inputParameters = [
            {
              name = "mydata_standard6"
              value = {
                elementReference = "SimilarOpportunitiesCollection"
              }
            },
            {
              name = "column01_fieldName"
              value = {
                stringValue = "Name"
              }
            },
            {
              name = "column01_label"
              value = {
                stringValue = "Opportunity"
              }
            },
            {
              name = "column01_width"
              value = {
                numberValue = 350
              }
            },
            {
              name = "selectedRows_standard6"
              value = {
                elementReference = "SelectedOppsFromDatatable"
              }
            },
            {
              name = "column02_fieldName"
              value = {
                stringValue = "StageName"
              }
            },
            {
              name = "column02_label"
              value = {
                stringValue = "Stage"
              }
            },
            {
              name = "column02_width"
              value = {
                numberValue = 100
              }
            },
            {
              name = "column03_fieldName"
              value = {
                stringValue = "Country__c"
              }
            },
            {
              name = "column03_label"
              value = {
                stringValue = "Country"
              }
            },
            {
              name = "column03_width"
              value = {
                numberValue = 100
              }
            },
            {
              name = "column04_fieldName"
              value = {
                stringValue = "DepartmentFunction__c"
              }
            },
            {
              name = "column04_label"
              value = {
                stringValue = "Departments"
              }
            },
            {
              name = "column04_width"
              value = {
                numberValue = 150
              }
            },
            {
              name = "column05_label"
              value = {
                stringValue = "Industry"
              }
            },
            {
              name = "column05_fieldName"
              value = {
                stringValue = "Industry__c"
              }
            },
            {
              name = "column05_width"
              value = {
                numberValue = 150
              }
            },
            {
              name = "column06_editable"
              value = {
                booleanValue = false
              }
            },
            {
              name = "column06_label"
              value = {
                stringValue = "Amount"
              }
            },
            {
              name = "column06_type"
              value = {
                stringValue = "Currency"
              }
            },
            {
              name = "column06_width"
              value = {
                numberValue = 80
              }
            },
            {
              name = "column05_type"
              value = {
                stringValue = "Text"
              }
            },
            {
              name = "column06_fieldName"
              value = {
                stringValue = "Amount"
              }
            },
            {
              name = "column08_fieldName"
              value = {
                stringValue = "Closed_Opportunity_Summary__c"
              }
            },
            {
              name = "column08_label"
              value = {
                stringValue = "Deal Summary"
              }
            },
            {
              name = "column08_width"
              value = {
                numberValue = 500
              }
            },
          ]
          isRequired = true
          storeOutputAutomatically = true
        },
        {
          name = "Blank"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
    {
      name = "Something_went_wrong"
      label = "Something went wrong"
      locationX = 1153
      locationY = 264
      allowBack = false
      allowFinish = true
      allowPause = false
      fields = [
        {
          name = "ErrorMessage"
          fieldText = "<p>Something went wrong:</p><p>{!$Flow.FaultMessage}</p>"
          fieldType = "DisplayText"
        },
      ]
      showFooter = true
      showHeader = true
    },
  ]
  start = {
    locationX = 50
    locationY = 50
    connector = {
      targetReference = "GetCurrentOpportunity"
    }
  }
  status = "Draft"
  variables = [
    {
      name = "CountryField"
      dataType = "String"
      isCollection = false
      isInput = false
      isOutput = false
      value = {
        stringValue = "Country"
      }
    },
    {
      name = "recordId"
      dataType = "String"
      isCollection = false
      isInput = true
      isOutput = true
    },
    {
      name = "SelectedOppsFromDatatable"
      dataType = "SObject"
      isCollection = true
      isInput = true
      isOutput = true
      objectType = salesforce.Opportunity
    },
    {
      name = "SimilarOpportunitiesCollection"
      dataType = "SObject"
      isCollection = true
      isInput = true
      isOutput = true
      objectType = salesforce.Opportunity
    },
  ]
}
